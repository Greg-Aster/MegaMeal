@tailwind components;

@layer components {

    :root {
    /* Global transparency controls */
        --bg-opacity: 0.85; /* Default transparency value */
    /* Card border opacity control */
        --card-border-opacity: 0.2; /* Default opacity (0.0 to 1.0) for general cards */
        --card-border-subtle-opacity: 0.1; /* Opacity for subtle border on general cards */

    /* Timeline Banner specific opacity controls */
        --timeline-banner-border-line-opacity: .3;  /* Opacity for the solid border line (0.0 to 1.0) */
        --timeline-banner-glow-opacity: 0.7;       /* Opacity for the glow effect (0.0 to 1.0) */

    /* Theme Colors for Product Card Glow (Example: Vibrant Blue) */
        --primary: #007bff; /* Example: Bright Blue */
        --primary-hover: #0056b3; /* Example: Darker Blue for hover or secondary glow */
        --primary-rgb: 0, 123, 255; /* RGB version for use in rgba() if needed */
        --hue: 210; /* Default hue */
        --card-bg: oklch(0.98 0.01 var(--hue));
        --text-color: oklch(0.2 0.01 var(--hue));
        --border-color: oklch(0.8 0.01 var(--hue));
        --surface-1: oklch(0.95 0.01 var(--hue));
        --surface-2: oklch(0.92 0.02 var(--hue));
        --input-bg: oklch(0.96 0.01 var(--hue));
        --input-border-color: oklch(0.7 0.01 var(--hue));
        --text-on-primary: oklch(0.98 0.01 var(--hue));
        --text-color-muted: oklch(0.5 0.01 var(--hue));
    }
    
@media (prefers-color-scheme: dark) {
    :root {
        --card-bg: oklch(0.15 0.01 var(--hue));
        --text-color: oklch(0.9 0.01 var(--hue));
        --border-color: oklch(0.3 0.01 var(--hue));
        --surface-1: oklch(0.2 0.01 var(--hue));
        --surface-2: oklch(0.25 0.02 var(--hue));
        --input-bg: oklch(0.18 0.01 var(--hue));
        --input-border-color: oklch(0.4 0.01 var(--hue));
        --text-on-primary: oklch(0.98 0.01 var(--hue));
        --text-color-muted: oklch(0.6 0.01 var(--hue));
    }
}
    /* Keep existing card-base but add opacity and backdrop blur */
    .card-base {
        @apply rounded-[var(--radius-large)] overflow-hidden transition;
        background-color: color-mix(in srgb, var(--card-bg), transparent calc((1 - var(--bg-opacity)) * 100%));
        backdrop-filter: blur(3px);
        box-sizing: border-box;
        /* padding: 2px; */ /* Padding removed, space created by transparent shadow layer */
        border: none;
        box-shadow:
          /* Transparent 2px inset to create space for the glow */
          inset 0 0 0 2px transparent,
          /* Bright center line, inset by 2px (to sit inside transparent layer), 1px thick */
          inset 0 0 0 2px color-mix(in srgb, var(--primary) calc(var(--card-border-opacity) * 100%), transparent),
          /* Inner glow / falloff, starting from the 3px inset */
          inset 0 0 5px 3px color-mix(in srgb, var(--primary) calc(var(--card-border-opacity) * 70%), transparent),
          /* Softer, wider inner glow */
          inset 0 0 7px 3px color-mix(in srgb, var(--primary) calc(var(--card-border-opacity) * 40%), transparent);
    }

    .card-base2 {
        @apply rounded-[var(--radius-large)] overflow-hidden transition;
        background-color: color-mix(in srgb, var(--card-bg), transparent calc((1 - var(--bg-opacity)) * 100%));
        backdrop-filter: blur(3px);
        box-sizing: border-box;
        border: 1px solid color-mix(in srgb, var(--primary) calc(var(--card-border-subtle-opacity) * 100%), transparent);
        /* No complex box-shadow for glow, just a subtle border */
    }
    .card-base3 {
        @apply rounded-[var(--radius-large)] overflow-hidden transition;
        background-color: color-mix(in srgb, var(--card-bg), transparent calc((1 - var(--bg-opacity)) * 100%));
        backdrop-filter: blur(3px);
        box-sizing: border-box;
        /* padding: 2px; */ /* Padding removed, space created by transparent shadow layer */
        border: none;
        box-shadow:
          /* Transparent 2px inset to create space for the glow */
          inset 0 0 0 2px transparent,
          /* Bright center line, inset by 2px (to sit inside transparent layer), 1px thick */
          inset 0 0 0 2px color-mix(in srgb, var(--primary) calc(var(--card-border-opacity) * 100%), transparent),
          /* Inner glow / falloff, starting from the 3px inset */
          inset 0 0 5px 3px color-mix(in srgb, var(--primary) calc(var(--card-border-opacity) * 70%), transparent),
          /* Softer, wider inner glow */
          inset 0 0 7px 3px color-mix(in srgb, var(--primary) calc(var(--card-border-opacity) * 40%), transparent);
    }

    h1, h2, h3, h4, h5, h6, p, a, span, li, ul, ol, blockquote, code, pre, table, th, td, strong {
        @apply transition;
    }
    .card-shadow {
        @apply drop-shadow-[0_2px_4px_rgba(0,0,0,0.005)]
    }
    .expand-animation {
        @apply relative before:ease-out before:transition active:bg-none hover:before:bg-[var(--btn-plain-bg-hover)] active:before:bg-[var(--btn-plain-bg-active)] z-0
        before:absolute before:rounded-[inherit] before:inset-0 before:scale-[0.85] hover:before:scale-100 before:-z-10
    }
    .link {
        @apply transition rounded-md p-1 -m-1 expand-animation;
    }
    .link-lg {
        @apply transition rounded-md p-1.5 -m-1.5 expand-animation;
    }
    .float-panel {
        @apply top-[5.25rem] rounded-[var(--radius-large)] overflow-hidden bg-[var(--float-panel-bg)] transition shadow-xl dark:shadow-none
    }
    .float-panel-closed {
        @apply -translate-y-1 opacity-0 pointer-events-none
    }
    .search-panel mark {
        @apply bg-transparent text-[var(--primary)]
    }

    .btn-card {
        @apply transition flex items-center justify-center bg-[var(--card-bg)] hover:bg-[var(--btn-card-bg-hover)]
        active:bg-[var(--btn-card-bg-active)]
    }
    .btn-card.disabled {
        @apply pointer-events-none text-black/10 dark:text-white/10
    }
    .btn-plain {
        @apply transition relative flex items-center justify-center bg-none
        text-black/75 hover:text-[var(--primary)] dark:text-white/75 dark:hover:text-[var(--primary)];
        &:not(.scale-animation) {
            @apply hover:bg-[var(--btn-plain-bg-hover)] active:bg-[var(--btn-plain-bg-active)]
        }
        &.scale-animation {
            @apply expand-animation;
            &.current-theme-btn {
                @apply before:scale-100 before:opacity-100 before:bg-[var(--btn-plain-bg-hover)] text-[var(--primary)]
            }
        }
    }
    .btn-regular {
        @apply transition flex items-center justify-center bg-[var(--btn-regular-bg)] hover:bg-[var(--btn-regular-bg-hover)] active:bg-[var(--btn-regular-bg-active)]
        text-[var(--btn-content)] dark:text-white/75
    }

    .link-underline {
        @apply transition underline decoration-2 decoration-dashed decoration-[var(--link-underline)]
        hover:decoration-[var(--link-hover)] active:decoration-[var(--link-active)] underline-offset-[0.25rem]
    }

    .toc-hide,
    .toc-not-ready {
        @apply opacity-0 pointer-events-none
    }

    #toc-inner-wrapper {
        mask-image: linear-gradient(to bottom, transparent 0%, black 2rem, black calc(100% - 2rem), transparent 100%);
    }

    .hide-scrollbar {
        scrollbar-width: none;
        -ms-overflow-style: none;
    }
    .hide-scrollbar::-webkit-scrollbar {
        display: none;
    }

    .text-90 {
        @apply text-black/90 dark:text-white/90
    }
    .text-75 {
        @apply text-black/75 dark:text-white/75
    }
    .text-50 {
        @apply text-black/50 dark:text-white/50
    }
    .text-30 {
        @apply text-black/30 dark:text-white/30
    }
    .text-25 {
        @apply text-black/25 dark:text-white/25
    }

    .meta-icon {
        @apply w-8 h-8 transition rounded-md flex items-center justify-center bg-[var(--btn-regular-bg)]
        text-[var(--btn-content)] mr-2
    }
    .with-divider {
        @apply before:content-['/'] before:ml-1.5 before:mr-1.5 before:text-[var(--meta-divider)] before:text-sm
        before:font-medium before:first-of-type:hidden before:transition
    }

    .btn-regular-dark {
        @apply flex items-center justify-center
        bg-[oklch(0.45_0.01_var(--hue))] hover:bg-[oklch(0.50_0.01_var(--hue))] active:bg-[oklch(0.55_0.01_var(--hue))]
        dark:bg-[oklch(0.30_0.02_var(--hue))] dark:hover:bg-[oklch(0.35_0.03_var(--hue))] dark:active:bg-[oklch(0.40_0.03_var(--hue))]
    }
    .btn-regular-dark.success {
        @apply bg-[oklch(0.75_0.14_var(--hue))] dark:bg-[oklch(0.75_0.14_var(--hue))]
    }

    .copy-btn-icon {
        @apply absolute top-1/2 left-1/2 transition -translate-x-1/2 -translate-y-1/2
    }
    .copy-btn .copy-icon {
        @apply opacity-100 fill-white dark:fill-white/75
    }
    .copy-btn.success .copy-icon {
        @apply opacity-0 fill-[var(--deep-text)]
    }
    .copy-btn .success-icon {
        @apply opacity-0
    }
    .copy-btn.success .success-icon {
        @apply opacity-100
    }
    /*   Neon text */
    .neon-text {
        text-shadow: 
          0 0 5px #fff, 
          0 0 10px #fff, 
          0 0 20px oklch(0.65 0.5 var(--hue)), 
          0 0 40px oklch(0.65 0.5 var(--hue));
        animation: glow 1.5s infinite alternate;
      }
    
      @keyframes glow {
        from {
          text-shadow: 
            0 0 5px #fff, 
            0 0 10px #fff, 
            0 0 20px oklch(0.65 0.5 var(--hue)), 
            0 0 40px oklch(0.65 0.5 var(--hue));
        }
        to {
          text-shadow: 
            0 0 10px #fff, 
            0 0 20px #fff, 
            0 0 40px oklch(0.65 0.5 var(--hue)), 
            0 0 80px oklch(0.65 0.5 var(--hue));
        }
      }
      /*   Gradient background */
      .gradient-bg {
        background: linear-gradient(to right, oklch(0.35 0.2 var(--hue)), oklch(0.45 0.3 var(--hue)));
      }
      /*trickle effect*/
      @keyframes trickle {
        0% {
          transform: translateY(-100%);
          opacity: 0;
        }
        100% {
          transform: translateY(0);
          opacity: 1;
        }
      }
      
      .trickle-text {
        animation: trickle 2s ease-out forwards;
      }

    /* Keep default browser autofill in light mode, fix dark mode only */
        input:-webkit-autofill {
            transition: color 9999s ease-out, background-color 9999s ease-out;
        }
        
        .dark input:-webkit-autofill {
            -webkit-text-fill-color: oklch(0.85 0.01 var(--hue)) !important;
            /* Apply a semi-transparent version of your dark card background */
            box-shadow: 0 0 0px 1000px oklch(0.25 0.01 var(--hue), 0.7) inset !important;
        }
        
        @-moz-document url-prefix() {
            .dark input:-moz-autofill {
                color: oklch(0.85 0.01 var(--hue)) !important;
                background-color: oklch(0.25 0.01 var(--hue), 0.7) !important;
            }
        }
        
    /* Parallax background styles */
        .parallax-bg {
            transform: translateZ(0);
            position: absolute;
            top: 0vh;
            left: 0;
            width: 100%;
            height: 130vh;
            will-change: transform;
            /* Remove the initial transform that's causing the jump */
            /* transform: translate3d(0, var(--parallax-offset, 0), 0); */
            /* Modify the transition to only affect opacity */
            transition: opacity 0.3s ease-out;
            /* Start at full opacity but invisible due to parent container */
            opacity: 1;
        }
        
        /* Add this new class for the container */
        #parallax-banner {
            opacity: 0;
            transition: opacity 0.5s ease-out;
        }
        
        #parallax-banner.loaded {
            opacity: 1;
        }
    
    @keyframes fadeInParallax {
        from { opacity: 0; }
        to { opacity: 1; }
    }
}

.custom-md img, #post-cover img {
    @apply cursor-zoom-in
}

::selection {
    background-color: var(--selection-bg)
}

.dash-line {
    position: relative;
}

.dash-line::before {
    content: "";
    position: absolute;
    width: 10%;
    height: 100%;
    left: calc(50% - 1px);
    border-left: 2px dashed var(--line-color);
    pointer-events: none;
    transition: all 0.3s;
    transform: translateY(-50%);
}

.collapsed {
    height: var(--collapsedHeight);
}

/* Styles for selected and expanded product cards */
.product-card.selected {
  box-shadow: 0 0 20px 7px var(--primary), 0 0 10px 3px var(--primary-hover); /* Glowing effect */
  transform: scale(1.03); /* Slight expansion */
  z-index: 10; /* Ensure it's above other cards */
}

.product-card.expanded .product-description-short {
  display: none;
}

.product-card.expanded .product-description-full,
.product-card.expanded .product-additional-details {
  display: block;
  max-height: 1000px; /* Large enough to accommodate content */
  opacity: 1;
  overflow: visible;
}

/* Initial state for full description and additional details (hidden) */
.product-description-full,
.product-additional-details {
  max-height: 0;
  overflow: hidden;
  transition: max-height 0.5s ease-in-out, opacity 0.5s ease-in-out;
  opacity: 0;
  display: none; /* Start as display: none and switch to block when expanded */
}