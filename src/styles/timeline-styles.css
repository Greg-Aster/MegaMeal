/*
 * =================================================================================
 * Timeline Styles - Refactored
 *
 * This file contains styles specifically for the timeline feature.
 * It is designed to work with main.css, not against it. It relies on
 * global variables and base styles (like .card-base) defined in main.css.
 * All component-specific styles have been scoped to avoid global conflicts.
 * =================================================================================
 */

/* --- General Timeline & Layout --- */

.timeline {
  --radius-large: var(--radius-large, 12px); /* Kept as a local fallback */
  border-radius: var(--radius-large);
  overflow: hidden;
  position: relative; /* For child positioning */
}

.timeline-wrapper {
  /* No specific styles needed from source, can be used as a hook */
}

.timeline-viewport {
  transform: translateZ(0);
}

.timeline-container {
  transform-origin: center;
  transition: transform 0.3s ease;
  will-change: transform;
  cursor: grab;
  /* Forcing GPU acceleration on mobile */
  backface-visibility: hidden;
}

.timeline-container.dragging {
  cursor: grabbing;
}

/* Disable animations during drag for better performance */
.dragging .timeline-event,
.dragging .timeline-container {
  transition: none !important;
}

/* --- Timeline Controls & Footer --- */

.timeline-controls,
.timeline-footer {
  position: relative;
  z-index: 10;
}

.timeline-controls button svg,
.timeline-footer button svg {
  transform-origin: center;
  transition: transform 0.2s ease;
}

.timeline-controls button:hover svg,
.timeline-footer button:hover svg {
  transform: scale(1.2);
}

/* Subtle underline hover effect for control bars */
.timeline-controls::after,
.timeline-footer::after {
  content: '';
  position: absolute;
  left: 0;
  right: 0;
  height: 1px;
  background: linear-gradient(to right,
    transparent,
    var(--primary, oklch(0.65 0.15 var(--hue))) 50%,
    transparent);
  opacity: 0;
  transition: opacity 0.3s ease;
}

.timeline-controls::after {
  bottom: 0;
}

.timeline-footer::after {
  top: 0;
}

.timeline-controls:hover::after,
.timeline-footer:hover::after {
  opacity: 0.3;
}

/* Accessibility focus indicators */
.timeline-controls button:focus-visible,
.timeline-footer button:focus-visible,
.timeline-event:focus-visible .star-node {
  outline: 2px solid var(--primary);
  outline-offset: 2px;
}

/* --- Timeline Events & Card --- */

.timeline-event {
  transition: transform 0.3s cubic-bezier(0.34, 1.56, 0.64, 1), opacity 0.3s ease;
  transform-origin: center;
  will-change: transform;
}

.timeline-event:hover {
  z-index: 20;
}

.card-wrapper {
  position: absolute;
  z-index: 30;
  transform-origin: center;
  transition: transform 0.3s ease;
  left: 0;
  top: 0;
}

/* Card styles are applied to .timeline-card, inheriting from .card-base in main.css */
.timeline-card {
  /* Overrides for timeline-specific card appearance */
  box-shadow: 0 0 15px rgba(0, 0, 0, 0.1), 0 0 5px rgba(var(--primary-rgb, 0 0 0), 0.3);
  border: 2px solid var(--primary-dimmed, var(--border-color));
  transition: opacity 0.3s cubic-bezier(0.4, 0, 0.2, 1), transform 0.3s cubic-bezier(0.4, 0, 0.2, 1), border-color 0.3s ease, box-shadow 0.3s ease;
}

.timeline-event.selected .timeline-card {
  border-color: var(--primary);
  box-shadow: 0 0 15px rgba(0, 0, 0, 0.1), 0 0 10px rgba(var(--primary-rgb), 0.4);
}

.timeline-card .timeline-era-badge {
  text-transform: capitalize;
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}

.timeline-card .timeline-link {
  text-transform: capitalize;
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}

.timeline-card:hover .timeline-link,
.timeline-card .timeline-link:hover {
  background-color: var(--primary) !important;
  color: white !important;
  text-decoration: none;
}

/* Pointers for timeline cards */
.card-pointer {
  position: absolute;
  width: 8px;
  height: 8px;
  transform: rotate(45deg);
  border: inherit; /* Inherits the border style from .timeline-card */
  background-color: var(--card-bg); /* Match card background */
}

.timeline-card-top { bottom: 30px; }
.timeline-card-top .card-pointer {
  border-bottom-style: solid; border-right-style: solid; border-top-style: none; border-left-style: none;
  bottom: -5px; left: 50%; margin-left: -4px;
}
.timeline-card-bottom { top: 30px; }
.timeline-card-bottom .card-pointer {
  border-top-style: solid; border-left-style: solid; border-bottom-style: none; border-right-style: none;
  top: -5px; left: 50%; margin-left: -4px;
}
.timeline-card-left { right: 30px; }
.timeline-card-left .card-pointer {
  border-right-style: solid; border-top-style: solid; border-bottom-style: none; border-left-style: none;
  right: -5px; top: 50%; margin-top: -4px;
}
.timeline-card-right { left: 30px; }
.timeline-card-right .card-pointer {
  border-left-style: solid; border-bottom-style: solid; border-top-style: none; border-right-style: none;
  left: -5px; top: 50%; margin-top: -4px;
}


/* --- Star / Event Node Styles --- */

.event-node {
  /* Increased hit area for better interaction */
  min-width: 44px;
  min-height: 44px;
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
}

/* Consolidated Star Styles (from StarNode.astro and AstroThreeStarMap.astro) */
.star-wrapper {
  position: relative;
  display: flex;
  align-items: center;
  justify-content: center;
  --star-color: var(--primary, #3b82f6); /* Default to a blue if --primary is not available */
  --star-size: 8px;
  --animation-duration: 4s;
  filter:
    drop-shadow(0 0 3px var(--star-color))
    drop-shadow(0 0 8px color-mix(in oklch, var(--star-color), transparent 50%));
  transition: transform 0.3s ease, filter 0.3s ease;
}

.star-backing-plate {
  position: absolute;
  top: 50%;
  left: 50%;
  width: calc(var(--star-size) * 2.5);
  height: calc(var(--star-size) * 2.5);
  background-color: rgba(0, 0, 0, 0.4);
  border-radius: 50%;
  transform: translate(-50%, -50%);
  z-index: 0;
  transition: opacity 0.3s ease, transform 0.3s ease, background-color 0.3s ease;
  opacity: 0.85;
  backdrop-filter: blur(3px);
}

.star-glow {
  position: absolute;
  top: 50%;
  left: 50%;
  width: calc(var(--star-size) * 2.5);
  height: calc(var(--star-size) * 2.5);
  border-radius: 50%;
  transform: translate(-50%, -50%);
  background: radial-gradient(circle, var(--star-color) 0%, rgba(255, 255, 255, 0) 70%);
  opacity: 0.5;
  animation: colorShiftGlow var(--animation-duration, 4s) infinite alternate ease-in-out;
  pointer-events: none;
  mix-blend-mode: screen;
  z-index: 1;
}

.star-rays {
  position: absolute;
  top: 50%;
  left: 50%;
  width: calc(var(--star-size) * 6);
  height: calc(var(--star-size) * 6);
  transform: translate(-50%, -50%);
  background-image: repeating-conic-gradient(var(--star-color) 0deg, transparent 1.5deg, transparent 18deg, var(--star-color) 20deg);
  opacity: 0.15;
  border-radius: 50%;
  pointer-events: none;
  display: none;
  animation: rotateRays 12s linear infinite;
  z-index: 2;
}

.star-shape {
  position: relative;
  z-index: 3;
  width: calc(var(--star-size) * 1.5);
  height: calc(var(--star-size) * 1.5);
  filter: drop-shadow(0 0 1px var(--star-color));
  animation: starShimmer calc(var(--animation-duration) * 0.8) infinite ease-in-out;
}

/* States: Hover, Selected, Key Event */
.star-wrapper.is-hovered, .event-node:hover .star-wrapper {
  filter:
    drop-shadow(0 0 4px var(--star-color))
    drop-shadow(0 0 10px color-mix(in oklch, var(--star-color), transparent 40%));
  z-index: 5;
}

.star-wrapper.is-hovered .star-backing-plate,
.star-wrapper.is-selected .star-backing-plate {
  opacity: 0.95;
  background-color: rgba(0, 0, 0, 0.5);
  transform: translate(-50%, -50%) scale(1.15);
}

.star-wrapper.is-key-event {
  filter:
    drop-shadow(0 0 4px var(--star-color))
    drop-shadow(0 0 12px color-mix(in oklch, var(--star-color), transparent 30%));
}

.star-wrapper.is-key-event .star-rays { display: block; opacity: 0.2; }
.star-wrapper.is-hovered .star-rays { display: block; opacity: 0.18; }

.star-wrapper.is-selected {
  filter:
    drop-shadow(0 0 5px var(--star-color))
    drop-shadow(0 0 10px var(--star-color))
    drop-shadow(0 0 15px color-mix(in oklch, var(--star-color), white 30%)) !important;
  z-index: 10;
  transform: scale(1.25);
}

.star-wrapper.is-selected .star-glow { opacity: 0.8; width: calc(var(--star-size) * 2); height: calc(var(--star-size) * 2); }
.star-wrapper.is-selected .star-rays { display: block; opacity: 0.3; animation-duration: 8s; }


/* Sparkles & Star Animations */
.sparkle-container {
  z-index: 20;
  filter: drop-shadow(0 0 5px var(--star-color, var(--primary)));
  transform: translateZ(0); /* Force GPU acceleration */
}

@keyframes colorShiftGlow {
  0% { opacity: 0.4; transform: translate(-50%, -50%) scale(0.9); filter: hue-rotate(0deg) brightness(1); }
  25% { opacity: 0.6; transform: translate(-50%, -50%) scale(1.0); filter: hue-rotate(15deg) brightness(1.1); }
  50% { opacity: 0.7; transform: translate(-50%, -50%) scale(1.1); filter: hue-rotate(30deg) brightness(1.2); }
  75% { opacity: 0.6; transform: translate(-50%, -50%) scale(1.0); filter: hue-rotate(15deg) brightness(1.1); }
  100% { opacity: 0.4; transform: translate(-50%, -50%) scale(0.9); filter: hue-rotate(0deg) brightness(1); }
}

@keyframes rotateRays {
  from { transform: translate(-50%, -50%) rotate(0deg); }
  to { transform: translate(-50%, -50%) rotate(360deg); }
}

@keyframes starShimmer {
  0%, 100% { filter: drop-shadow(0 0 1px var(--star-color)) brightness(1); }
  50% { filter: drop-shadow(0 0 2px var(--star-color)) brightness(1.3); }
}

/* --- Mobile Specific Styles --- */

.fixed-mobile-card-container {
  position: fixed;
  bottom: 70px;
  left: 50%;
  transform: translateX(-50%) translateZ(0); /* Added translateZ for performance */
  display: flex;
  justify-content: center;
  align-items: flex-end;
  z-index: 40;
  pointer-events: none;
  width: auto;
  max-width: 90%;
}

.fixed-mobile-card-container .timeline-card {
  pointer-events: auto;
  transform: none !important;
  margin: 0;
  max-width: 280px;
  min-width: 250px;
  width: auto;
  padding: 12px;
}

.fixed-mobile-card-container .card-pointer {
  display: none;
}

/* Improves touch interactions */
.touch-active .card-wrapper,
.touch-active .timeline-event {
  transition: none !important;
}

@media (max-width: 767px) {
  .star-node {
    transform: scale(1.2); /* Make stars slightly bigger on mobile */
  }
}

/* --- View-Specific Styles --- */

/* Scoped styles for TimelineControls component */
.timeline-controls-wrapper {
  display: flex;
  align-items: center;
  gap: 1rem;
  padding: 0.5rem 1rem;
  background-color: var(--surface-1);
  color: var(--text-color);
  border-radius: var(--radius-large);
  font-size: 0.9rem;
}
.timeline-controls-wrapper label {
  font-weight: 500;
}
.timeline-controls-wrapper .era-selector-container,
.timeline-controls-wrapper .view-switcher-container {
  display: flex;
  align-items: center;
  gap: 0.5rem;
}
.timeline-controls-wrapper .era-select,
.timeline-controls-wrapper .view-mode-button {
  padding: 0.35rem 0.75rem;
  border: 1px solid var(--border-color);
  background-color: var(--card-bg);
  color: var(--text-color);
  border-radius: 8px;
  cursor: pointer;
  transition: background-color 0.2s ease, border-color 0.2s ease;
}
.timeline-controls-wrapper .era-select:hover,
.timeline-controls-wrapper .view-mode-button:hover {
  background-color: var(--surface-2);
  border-color: var(--primary);
}
.timeline-controls-wrapper .view-mode-button.active {
    background-color: var(--primary);
    color: var(--text-on-primary, #fff);
    border-color: var(--primary);
}

/* List View */
.list-view .era-header {
  position: relative;
  overflow: hidden;
}
.list-view .era-header::after {
  content: ''; position: absolute; top: 0; right: 0; width: 5px; height: 100%;
  background: linear-gradient(to right, transparent, oklch(0.65 0.15 var(--hue)), transparent);
  animation: shine 3s infinite linear; opacity: 0.5; transform: translateX(-100%);
}
@keyframes shine {
  0% { transform: translateX(-100%); } 100% { transform: translateX(calc(100vw + 5px)); }
}
.list-view .scrollbar-timeline {
  scrollbar-width: thin; scrollbar-color: oklch(0.65 0.15 var(--hue)) transparent;
  padding-bottom: 2rem; scroll-behavior: smooth;
}
.list-view .scrollbar-timeline::-webkit-scrollbar { width: 8px; }
.list-view .scrollbar-timeline::-webkit-scrollbar-track { background: transparent; }
.list-view .scrollbar-timeline::-webkit-scrollbar-thumb {
  background-color: oklch(0.65 0.15 var(--hue));
  opacity: 0.5; border-radius: 20px; border: 2px solid transparent;
}

/* Map View */
.map-view .map-pin {
  transition: transform 0.3s ease-out; z-index: 5;
}
.map-view .map-pin:hover { z-index: 10; transform: scale(1.1); }
.map-view .pin-circle { animation: pinPulse 3s infinite; }
@keyframes pinPulse { 0%, 100% { transform: scale(1); } 50% { transform: scale(1.1); } }

/* Tree View */
.tree-view .timeline-tree-node {
  transition: opacity 0.5s ease, transform 0.5s ease; opacity: 0; transform: translateX(-20px);
}
.tree-view[data-ready="true"] .timeline-tree-node { opacity: 1; transform: translateX(0); }
.tree-view .timeline-tree-node:hover .tree-node-circle {
  transform: scale(1.2); box-shadow: 0 0 10px oklch(0.65 0.15 var(--hue));
}
.tree-view .tree-node-circle { transition: all 0.3s ease-in-out; }

/* --- Background Effects & Misc --- */

.timeline-center-line, .timeline-start-marker, .timeline-end-marker {
  pointer-events: none;
}

.starfield-overlay {
  position: absolute; top: 0; left: 0; width: 100%; height: 100%;
  background-image:
    radial-gradient(white 0.5px, transparent 0.5px),
    radial-gradient(white 0.5px, transparent 0.5px);
  background-size: 30px 30px, 60px 60px;
  background-position: 0 0, 15px 15px;
  animation: starfield-scroll 120s linear infinite;
  opacity: 0.15;
  pointer-events: none;
}

@keyframes starfield-scroll {
  from { background-position: 0 0, 15px 15px; }
  to { background-position: -500px 500px, -485px 485px; }
}

/* Floating animations for background elements */
.floating-animation-1 { animation: float1 35s infinite ease-in-out; }
.floating-animation-2 { animation: float2 40s infinite ease-in-out; animation-delay: -8s; }
.floating-animation-3 { animation: float3 45s infinite ease-in-out; animation-delay: -15s; }
@keyframes float1 { 0%, 100% { transform: translateY(0px) scale(var(--scale-factor,1)); } 50% { transform: translateY(44px) scale(var(--scale-factor,1)); } }
@keyframes float2 { 0%, 100% { transform: translateY(0px) scale(var(--scale-factor,1)); } 50% { transform: translateY(-60px) scale(var(--scale-factor,1)); } }
@keyframes float3 { 0%, 100% { transform: translateY(0px) scale(var(--scale-factor,1)); } 50% { transform: translateY(52px) scale(var(--scale-factor,1)); } }

/* ===================================================================
 * Additional styles for refactored ListView and MapView components
 * Add these to your existing timeline-styles.css file
 * =================================================================== */

/* --- Shared Styles --- */
.background-image {
  width: 100%;
  height: 100%;
  object-fit: cover;
  opacity: 0.25;
}

.background-overlay {
  position: absolute;
  inset: 0;
  background: linear-gradient(to right, 
    rgba(71, 85, 105, 0.4), 
    rgba(51, 65, 85, 0.3)
  );
}

.empty-state {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  height: 100%;
  text-align: center;
  padding: 2rem;
  color: var(--text-color);
}

.empty-icon {
  width: 4rem;
  height: 4rem;
  color: var(--primary);
  margin-bottom: 1rem;
}

.empty-title {
  font-size: 1.25rem;
  font-weight: bold;
  margin-bottom: 0.5rem;
}

.empty-text {
  color: var(--text-muted);
  max-width: 28rem;
}

.empty-text code {
  background-color: var(--surface-2);
  padding: 0.125rem 0.5rem;
  border-radius: 0.25rem;
  color: var(--primary);
  font-family: var(--font-mono);
  font-size: 0.875rem;
}

/* --- Enhanced List View Styles --- */
.list-view {
  position: relative;
  height: 100%;
}

.list-view-background {
  position: absolute;
  inset: 0;
  z-index: -10;
  overflow: hidden;
}

.list-view-content {
  position: relative;
  z-index: 10;
  height: 100%;
  overflow-y: auto;
  max-height: calc(100vh - 160px);
}

.events-container {
  padding: 1.5rem 1rem;
  display: flex;
  flex-direction: column;
  gap: 2rem;
}

.era-section {
  /* Uses existing styles from timeline-styles.css */
}

.era-header {
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: 0.75rem 1rem;
  border-radius: 0.5rem;
  margin-bottom: 1rem;
  font-weight: bold;
  cursor: pointer;
  transition: all 0.2s ease;
}

.era-header:hover {
  transform: translateX(4px);
}

.era-title {
  font-size: 1.125rem;
  margin: 0;
}

.era-years {
  font-size: 0.875rem;
  opacity: 0.75;
}

.era-events {
  display: flex;
  flex-direction: column;
  gap: 0.75rem;
  transition: all 0.3s ease;
}

.era-events.collapsed {
  max-height: 0;
  overflow: hidden;
  margin: 0;
  opacity: 0;
}

.timeline-event-card {
  display: flex;
  align-items: start;
  gap: 1rem;
  padding: 0.75rem;
  border-radius: 0.5rem;
  transition: all 0.2s ease;
  cursor: pointer;
  background: rgba(255, 255, 255, 0.02);
}

.timeline-event-card:hover {
  background: rgba(255, 255, 255, 0.05);
  backdrop-filter: blur(4px);
  transform: translateX(4px);
}

.timeline-event-card.selected {
  background: rgba(var(--primary-rgb), 0.1);
  border: 1px solid rgba(var(--primary-rgb), 0.2);
}

.event-year {
  flex-shrink: 0;
  width: 4rem;
  text-align: center;
}

.event-year time {
  font-weight: bold;
  color: var(--primary);
  font-size: 0.875rem;
}

.event-connector {
  flex-shrink: 0;
  width: 2rem;
  display: flex;
  align-items: center;
  justify-content: center;
  position: relative;
  min-height: 3.75rem;
}

.connector-line {
  position: absolute;
  inset: 0;
  width: 0.125rem;
  background: rgba(var(--primary-rgb), 0.3);
  left: 50%;
  transform: translateX(-50%);
}

.connector-dot {
  width: 0.75rem;
  height: 0.75rem;
  border-radius: 50%;
  border: 2px solid var(--primary);
  background: var(--card-bg);
  position: relative;
  z-index: 10;
  transition: all 0.2s ease;
}

.connector-dot.key-event {
  background: var(--primary);
  border-color: var(--primary-light, var(--primary));
}

.timeline-event-card:hover .connector-dot {
  transform: scale(1.2);
  box-shadow: 0 0 10px rgba(var(--primary-rgb), 0.5);
}

.event-content {
  flex: 1;
  min-width: 0;
}

.event-title {
  font-size: 1rem;
  font-weight: 600;
  margin-bottom: 0.5rem;
  margin: 0 0 0.5rem 0;
}

.event-link {
  color: var(--text-color);
  text-decoration: none;
  transition: color 0.2s ease;
}

.event-link:hover,
.event-link:focus {
  color: var(--primary);
}

.event-description {
  font-size: 0.875rem;
  color: var(--text-muted);
  line-height: 1.5;
  margin-bottom: 0.75rem;
}

.event-location {
  display: flex;
  align-items: center;
  gap: 0.25rem;
  font-size: 0.75rem;
  color: var(--primary);
  margin-bottom: 0.5rem;
}

.location-icon {
  width: 0.75rem;
  height: 0.75rem;
}

.era-badge {
  display: inline-block;
  font-size: 0.75rem;
  padding: 0.125rem 0.5rem;
  border-radius: 9999px;
  font-weight: 500;
}

/* --- Enhanced Map View Styles --- */
.map-view {
  height: 100%;
}

.map-view-content {
  height: 100%;
  overflow-y: auto;
  display: flex;
  flex-direction: column;
  gap: 1.5rem;
  padding: 1rem;
  max-height: calc(100vh - 160px);
}

.map-container {
  position: relative;
  background: var(--surface-1);
  border-radius: 0.5rem;
  overflow: hidden;
  height: min(70vh, 500px);
  min-height: 300px;
}

.map-background {
  position: absolute;
  inset: 0;
}

.map-grid {
  position: absolute;
  inset: 0;
  color: var(--primary);
}

.map-decoration {
  fill: currentColor;
  fill-opacity: 0.05;
  stroke: currentColor;
  stroke-width: 0.5;
  opacity: 0.2;
}

.map-events {
  position: absolute;
  inset: 0;
}

.map-pin {
  position: absolute;
  transform: translate(-50%, -50%);
  cursor: pointer;
  transition: all 0.2s ease;
  z-index: 5;
}

.map-pin:hover,
.map-pin.highlighted {
  z-index: 10;
  transform: translate(-50%, -50%) scale(1.1);
}

.map-pin.selected .pin-circle {
  transform: scale(1.5);
  box-shadow: 0 0 15px rgba(var(--primary-rgb), 0.6);
}

.pin-circle {
  width: 1rem;
  height: 1rem;
  border-radius: 50%;
  background: var(--primary);
  border: 2px solid white;
  box-shadow: 0 0 10px rgba(var(--primary-rgb), 0.5);
  transition: all 0.2s ease;
  position: relative;
  z-index: 10;
}

.map-pin.key-event .pin-circle {
  background: #fbbf24;
  border-color: #fde68a;
  box-shadow: 0 0 15px rgba(251, 191, 36, 0.6);
}

.pin-year {
  position: absolute;
  bottom: -1.5rem;
  left: 50%;
  transform: translateX(-50%);
  font-size: 0.75rem;
  font-weight: bold;
  color: white;
  background: rgba(0, 0, 0, 0.8);
  padding: 0.125rem 0.25rem;
  border-radius: 0.25rem;
  backdrop-filter: blur(4px);
}

.pin-tooltip {
  position: absolute;
  bottom: 100%;
  left: 50%;
  transform: translateX(-50%);
  margin-bottom: 0.5rem;
  background: var(--surface-2);
  color: white;
  padding: 0.75rem;
  border-radius: 0.5rem;
  box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);
  border: 1px solid var(--border-color);
  opacity: 0;
  visibility: hidden;
  transform: translateX(-50%) scale(0.95);
  transition: all 0.2s ease;
  width: 12rem;
  z-index: 30;
}

.pin-tooltip::after {
  content: '';
  position: absolute;
  top: 100%;
  left: 50%;
  transform: translateX(-50%);
  border: 6px solid transparent;
  border-top-color: var(--surface-2);
}

.map-pin:hover .pin-tooltip,
.map-pin:focus .pin-tooltip {
  opacity: 1;
  visibility: visible;
  transform: translateX(-50%) scale(1);
}

.tooltip-title {
  font-weight: 600;
  font-size: 0.875rem;
  margin-bottom: 0.25rem;
}

.tooltip-year {
  color: var(--primary);
  font-size: 0.75rem;
  font-weight: 500;
  margin-bottom: 0.25rem;
}

.tooltip-location {
  color: var(--text-muted);
  font-size: 0.75rem;
  margin-bottom: 0.5rem;
}

.tooltip-description {
  color: var(--text-muted);
  font-size: 0.75rem;
  line-height: 1.4;
  margin-bottom: 0.5rem;
}

.tooltip-cta {
  color: var(--primary);
  font-size: 0.75rem;
  font-weight: 500;
}

.map-legend {
  position: absolute;
  top: 1rem;
  right: 1rem;
  background: rgba(var(--surface-2-rgb), 0.9);
  backdrop-filter: blur(4px);
  padding: 0.75rem;
  border-radius: 0.5rem;
  border: 1px solid var(--border-color);
  color: white;
}

.legend-title {
  font-weight: 600;
  font-size: 0.875rem;
  margin-bottom: 0.5rem;
}

.legend-items {
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
}

.legend-item {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  font-size: 0.75rem;
}

.legend-dot {
  width: 0.75rem;
  height: 0.75rem;
  border-radius: 50%;
  border: 1px solid white;
}

.legend-dot.normal {
  background: var(--primary);
}

.legend-dot.key-event {
  background: #fbbf24;
}

.event-list {
  /* Add spacing if needed */
}

.list-title {
  font-size: 1.25rem;
  font-weight: bold;
  color: var(--text-color);
  margin-bottom: 1rem;
}

.list-grid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
  gap: 1rem;
}

.location-card {
  background: rgba(var(--surface-2-rgb), 0.5);
  backdrop-filter: blur(4px);
  border-radius: 0.5rem;
  border: 1px solid var(--border-color);
  transition: all 0.2s ease;
}

.location-card:hover,
.location-card.highlighted {
  background: rgba(var(--surface-2-rgb), 0.7);
  border-color: var(--primary);
  transform: scale(1.02);
}

.location-card.selected {
  background: rgba(var(--primary-rgb), 0.1);
  border-color: var(--primary);
  box-shadow: 0 0 0 1px rgba(var(--primary-rgb), 0.2);
}

.location-link {
  display: flex;
  align-items: start;
  gap: 0.75rem;
  padding: 1rem;
  text-decoration: none;
  color: inherit;
  width: 100%;
  height: 100%;
}

.location-link:focus {
  outline: 2px solid var(--primary);
  outline-offset: 2px;
  border-radius: 0.5rem;
}

.location-icon {
  flex-shrink: 0;
  width: 1.25rem;
  height: 1.25rem;
  color: var(--primary);
  margin-top: 0.125rem;
}

.location-content {
  flex: 1;
  min-width: 0;
}

.location-title {
  font-weight: 600;
  color: white;
  font-size: 0.875rem;
  margin-bottom: 0.25rem;
}

.location-year {
  color: var(--primary);
  font-size: 0.75rem;
  font-weight: 500;
  margin-bottom: 0.25rem;
}

.location-place {
  color: var(--text-muted);
  font-size: 0.75rem;
  margin-bottom: 0.5rem;
}

/* --- Responsive Styles --- */
@media (max-width: 768px) {
  .map-view-content {
    padding: 0.5rem;
    gap: 1rem;
  }

  .map-container {
    height: min(50vh, 400px);
    min-height: 250px;
  }

  .map-legend {
    top: 0.5rem;
    right: 0.5rem;
    padding: 0.5rem;
  }

  .legend-title {
    font-size: 0.75rem;
  }

  .pin-tooltip {
    width: 10rem;
    padding: 0.5rem;
  }

  .list-grid {
    grid-template-columns: 1fr;
  }

  .events-container {
    padding: 1rem 0.5rem;
    gap: 1.5rem;
  }

  .era-header {
    flex-direction: column;
    align-items: flex-start;
    gap: 0.25rem;
    padding: 0.5rem 0.75rem;
  }

  .timeline-event-card {
    padding: 0.5rem;
    gap: 0.75rem;
  }

  .event-year {
    width: 3rem;
  }

  .event-connector {
    width: 1.5rem;
  }
}

/* =================================================================================
 * Starmap-Specific Styles
 * 
 * Minimal styles for the unified 3D canvas starmap approach.
 * Stars are now rendered as Three.js sprites, not DOM elements.
 * ================================================================================= */

/* Force hardware acceleration for smooth starmap rendering */
.starmap-three-container {
  transform: translateZ(0);
  backface-visibility: hidden;
}

/* Floating card styles for starmap */
.starmap-floating-card {
  pointer-events: none;
}

.starmap-floating-card .timeline-card {
  pointer-events: auto;
}

/* Ensure canvas is interactive */
.starmap-three-container canvas {
  cursor: pointer;
}