---
// src/components/timeline/TimelineViewModes/StarMapView.astro
// Fixed version with proper props

import StarMap from '../StarMap.astro';
import type { StarEvent } from '../../../types/starmap';

// Get your events data (adjust this based on how you're getting events)
export interface Props {
  events?: StarEvent[];
  className?: string;
  isMobile?: boolean;
}

const { 
  events = [], 
  className = "",
  isMobile = false 
} = Astro.props;

// Convert your existing events to StarEvent format if needed
const starmapEvents: StarEvent[] = events.map((event, index) => ({
  slug: event.slug || `event-${index}`,
  year: event.year || new Date().getFullYear(),
  title: event.title || 'Untitled Event',
  description: event.description || '',
  era: event.era || 'unknown',
  isKeyEvent: event.isKeyEvent || false,
  uniqueId: event.uniqueId || `${event.slug}-${event.year}-${index}`
}));

// Generate a unique container ID
const containerId = `starmap-view-${Math.random().toString(36).substr(2, 9)}`;
---

<div class="starmap-view-container">
  <!-- âœ… NOW PASSING REQUIRED PROPS -->
  <StarMap 
    events={starmapEvents}
    containerId={containerId}
    isMobile={isMobile}
    className={`starmap-timeline-view ${className}`}
  />
</div>

<style>
  .starmap-view-container {
    width: 100%;
    height: 100%;
    min-height: 400px;
  }
  
  .starmap-timeline-view {
    height: 100%;
    border-radius: 8px;
    border: 1px solid rgba(255, 255, 255, 0.1);
  }
</style>