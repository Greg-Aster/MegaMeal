# Timeline Feature Implementation Guide

## Directory Structure

First, create a new folder for timeline components:

```
/components/timeline/
  - Timeline.astro         # Main timeline visualization component
  - TimelineController.astro  # Controls for the timeline (zoom, filter, etc.)
  - TimelineWidget.astro   # Small timeline widget for sidebars
  - TimelineNavigation.astro  # List/Tree/Map view navigation
```

## Files to Create

1. **Timeline Components:**
   - `components/timeline/Timeline.astro` - Main timeline visualization
   - `components/timeline/TimelineController.astro` - Timeline controls
   - `components/timeline/TimelineWidget.astro` - Widget for sidebars
   - `components/timeline/TimelineNavigation.astro` - Navigation for different views

2. **Timeline Service:**
   - `services/TimelineService.ts` - Service to handle data operations

3. **Timeline Styling:**
   - `styles/timeline.css` - Timeline-specific CSS

## Files to Update

1. **MainGridLayout.astro:**
   - Add import for the Timeline component
   - Add support for timeline banner type
   - Add timeline banner section

2. **config.ts:**
   - Update BlogPostData type to include timeline-related fields

## Implementation Steps

1. **Create Timeline Components:**
   - Create all timeline components in the new timeline folder
   - Update import paths in the components to reflect the new structure

2. **Create Timeline Service:**
   - Create the TimelineService.ts file in the services folder
   - Implement functions for getting timeline events, grouping by era, etc.

3. **Create Timeline CSS:**
   - Create the timeline.css file in the styles folder
   - Move all timeline-specific styles to this file

4. **Update MainGridLayout:**
   - Import the Timeline component
   - Add support for the timeline banner type
   - Add the timeline banner section

5. **Update Config Types:**
   - Update the BlogPostData type to include timeline-related fields

## Usage in MDX Files

To use the timeline banner in an MDX file, add the following frontmatter:

```yaml
---
title: "Your Post Title"
published: 2025-03-10
description: "Your post description"
# Use the timeline as a banner
bannerType: "timeline"
bannerData:
  category: "YOUR_CATEGORY"
  startYear: 3030
  endYear: 3060
  background: "/path/to/background.png"
# Regular post metadata for timeline integration
timelineYear: 3055
timelineEra: "your-era"
timelineLocation: "Location Name"
isKeyEvent: true
# Other post metadata
tags: [Your, Tags]
category: "YOUR_CATEGORY"
---
```

To embed a timeline within the content:

```astro
<Timeline 
  category="YOUR_CATEGORY"
  startYear={3040}
  endYear={3055}
  asBanner={true}
  bannerHeight="250px"
/>
```

For a more advanced timeline with controls:

```astro
<TimelineController 
  title="Universe Timeline" 
  category="YOUR_CATEGORY"
  background="/path/to/background.png"
  isCollapsed={false}
  compact={false}
/>
```

To show a list/tree/map navigation:

```astro
<WidgetLayout id="timeline-browser" name="Timeline Browser" isCollapsed={false}>
  <TimelineNavigation category="YOUR_CATEGORY" view="list" />
</WidgetLayout>
```

## Updating Imports and Migration

Since we're creating a new `/components/timeline/` folder and moving components there, you'll need to update imports in any files that previously used these components.

For example, change:
```javascript
import FictionTimeline from '../FictionTimeline.astro';
```

To:
```javascript
import Timeline from '../components/timeline/Timeline.astro';
```

## Files to Remove

After implementing the consolidated components, you can safely remove these redundant files:

1. `UniverseTimeline.astro`
2. `FictionTimeline.astro` (if it exists)
3. `timeline/[category].astro` 
4. `timeline/[...category].astro`
5. `TimelineWidget.astro` (from the root components folder)
6. Any other duplicate timeline files

## Styling Improvements

The consolidated timeline CSS file (`styles/timeline.css`) contains all the styling needed for the timeline components. Import this CSS file in any component or page that uses the timeline:

```astro
import '../styles/timeline.css';
```

## Adding New Features

To add new features to the timeline:

1. **New Event Types:** Update the TimelineService with new event type handlers
2. **Custom Visualizations:** Extend the Timeline.astro component
3. **Additional Data Fields:** Update both TimelineService.ts and config.ts

## Troubleshooting

- If the timeline doesn't appear, check that the CSS is properly imported
- Ensure the TimelineService is able to find posts with the timelineYear property
- Check the browser console for any JavaScript errors
- Verify that the components are using the correct import paths after migration

## Performance Considerations

The timeline has been optimized to:
- Load only the events needed for the current view
- Minimize DOM operations for better performance
- Use efficient CSS transitions instead of JavaScript animations where possible
- Lazy-load map view components