---
// src/components/CollapsibleScript.astro (fixed version)
---
<script>
  import { initCollapsibles } from '../scripts/collapsible.js';
  
  function safeInitialize() {
    // Short timeout to ensure DOM is ready
    setTimeout(() => {
      initCollapsibles();
    }, 50);
  }
  
  // Initialize only on these events, not immediately
  document.addEventListener('astro:page-load', safeInitialize);
  document.addEventListener('DOMContentLoaded', safeInitialize);
  
  // Also set up a MutationObserver as a safety net
  const observer = new MutationObserver((mutations) => {
    for (const mutation of mutations) {
      if (mutation.addedNodes.length) {
        // Look for our collapsible elements
        const hasCollapsibles = Array.from(mutation.addedNodes).some(node => {
          // Check if node is an Element before accessing element-specific properties
          if (node.nodeType === 1) {
            const element = node as Element;
            return element.classList?.contains('collapsible-header') || 
                   element.querySelector?.('.collapsible-header');
          }
          return false;
        });
        
        if (hasCollapsibles) {
          initCollapsibles();
          break;
        }
      }
    }
  });
  
  // Start observing after a slight delay
  setTimeout(() => {
    observer.observe(document.body, { childList: true, subtree: true });
  }, 100);
</script>