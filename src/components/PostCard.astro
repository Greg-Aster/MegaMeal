---
// src/components/PostCard.astro
// Updated PostCard component with mobile-friendly layout fixes

import path from 'path';
import ImageWrapper from './misc/ImageWrapper.astro';
import { Icon } from 'astro-icon/components';
import { i18n } from '../i18n/translation';
import I18nKey from '../i18n/i18nKey';
import { getDir } from '../utils/url-utils';
import { postCardConfig } from '../config/postcard.config';

interface Props {
  class?: string;
  entry: any;
  title: string;
  url: string;
  published: Date;
  updated?: Date;
  category: string;
  image: string;
  description: string;
  draft: boolean;
  style?: string;
  isPostPage?: boolean;
}

const {
  entry,
  title,
  url,
  published,
  updated,
  category,
  image,
  description,
  style = '',
  isPostPage = false
} = Astro.props;

const className = Astro.props.class;

// Modify the hasCover logic
const hasCover = image !== undefined && image !== null && image !== '' && 
  (!isPostPage || (isPostPage && entry.data.showImageOnPost !== false));

// Get local post card config
const config = postCardConfig.localPosts;

const { remarkPluginFrontmatter } = await entry.render();

// Calculate timestamp for data attribute
const timestamp = published.getTime();
const dateStr = published.toISOString().split('T')[0];
---

<!-- UPDATED: Horizontal layout on all screen sizes -->
<div
  class:list={[
    "card-base w-full overflow-hidden relative local-post mb-6 md:mb-0",
    // All mobile sizes: horizontal layout with appropriate heights
    "flex flex-row",
    "h-[10rem] xs:h-[11rem] sm:h-[12rem]",
    // Desktop: horizontal layout with fixed height
    "md:h-[14rem]",
    config.layout.cardBorderRadius, 
    className
  ]}
  style={style}
  data-post-type="local"
  data-post-id={entry.id}
  data-post-date={dateStr}
  data-post-timestamp={timestamp}
  data-post-category={category?.toLowerCase()}

  data-post-image={image}
  data-post-description={description}>
  
  <!-- IMAGE SECTION: Horizontal layout on all screen sizes -->
  {hasCover && (
    <a href={url} 
       aria-label={title}
       class:list={[
         "group relative rounded-xl overflow-hidden bg-black shrink-0",
         // Small mobile: reasonable width for horizontal layout
         "w-32 h-auto",
         // Larger mobile: slightly bigger
         "xs:w-36 sm:w-40",
         // Desktop: fixed dimensions, absolute positioning
         "md:w-[16rem] md:h-[12.5rem] md:absolute md:top-3 md:bottom-3 md:right-3",
         // Margins
         "m-3 md:m-0"
       ]}>
      
      <!-- Blurred background for aesthetic appeal -->
      <div class="absolute inset-0 blur-background">
        <ImageWrapper 
          src={image} 
          basePath={path.join("content/posts/", getDir(entry.id))} 
          alt=""
          class="w-full h-full object-cover blur-md scale-110 opacity-60" />
      </div>
      
      <!-- Hover overlay -->
      <div class="absolute pointer-events-none z-10 w-full h-full group-hover:bg-black/30 group-active:bg-black/50 transition"></div>
      
      <!-- Hover icon -->
      <div class="absolute pointer-events-none z-20 w-full h-full flex items-center justify-center">
        <Icon 
          name="material-symbols:chevron-right-rounded"
          class="transition opacity-0 group-hover:opacity-100 scale-50 group-hover:scale-100 text-white text-5xl" />
      </div>
      
      <!-- Main crisp image -->
      <div class="absolute inset-0 main-image z-5">
        <ImageWrapper 
          src={image} 
          basePath={path.join("content/posts/", getDir(entry.id))} 
          alt="Cover Image of the Post"
          class="postcard-image postcard-image-fix w-full h-full object-cover" />
      </div>
    </a>
  )}

  <!-- CONTENT SECTION: Responsive spacing and layout -->
  <div class:list={[
    "relative flex flex-col h-full transition-all",
    // Mobile portrait: full width with padding
    "w-full p-4 pb-6",
    // Mobile landscape: adjust for image width
    hasCover 
      ? "sm:w-3/5 sm:pl-4 sm:pr-6 sm:py-4" 
      : "sm:w-full sm:px-6 sm:py-4",
    // Desktop: adjust for absolute positioned image
    hasCover
      ? "md:w-[calc(100%_-_18rem_-_12px)] md:pl-9 md:pr-2 md:py-4"
      : "md:w-[calc(100%_-_52px_-_12px)] md:pl-9 md:pr-2 md:py-4"
  ]}>
    
    <!-- TITLE -->
    <a href={url}
       class:list={[
         "transition group w-full block font-bold mb-3 text-90",
         "hover:text-[var(--primary)] dark:hover:text-[var(--primary)]", 
         "active:text-[var(--title-active)] dark:active:text-[var(--title-active)]",
         // Desktop-only: side indicator
         "md:before:w-1 md:before:h-5 md:before:rounded-md md:before:bg-[var(--primary)]",
         "md:before:absolute md:before:top-[35px] md:before:left-[18px] md:before:block",
         config.styling.titleSize
       ]}>
      {title}
      <!-- Desktop hover arrow -->
      <Icon 
        class="text-[var(--primary)] text-[2rem] transition hidden md:inline absolute translate-y-0.5 opacity-0 group-hover:opacity-100 -translate-x-1 group-hover:translate-x-0" 
        name="material-symbols:chevron-right-rounded" />
    </a>

    <!-- METADATA - Hidden on ALL mobile devices, visible on desktop only -->
    <div class="mb-4 hidden md:block text-sm text-black/60 dark:text-white/60 flex gap-5 items-center">
      <time datetime={published.toISOString()}>
        {published.toLocaleDateString('en-US', { 
          year: 'numeric', 
          month: 'short', 
          day: 'numeric' 
        })}
      </time>
      {updated && config.content.showUpdateDate && (
        <>
          <span class="text-black/30 dark:text-white/30">•</span>
          <span>Updated {updated.toLocaleDateString('en-US', { 
            year: 'numeric', 
            month: 'short', 
            day: 'numeric' 
          })}</span>
        </>
      )}
      {category && (
        <>
          <span class="text-black/30 dark:text-white/30">•</span>
          <span class="capitalize">{category}</span>
        </>
      )}
    </div>

    <!-- DESCRIPTION - Positioned from container bottom -->
    <div class:list={[
      "absolute bottom-10 left-4 right-4 transition text-75",
      // Desktop: adjust for different padding
      "md:bottom-10 md:left-9 md:right-2",
      // Responsive line clamping
      "line-clamp-3 sm:line-clamp-2 md:line-clamp-3",
      `md:line-clamp-${config.styling.descriptionLines}`
    ]}>
      {description || remarkPluginFrontmatter.excerpt}
    </div>

    <!-- WORD COUNT AND READ TIME - Fixed at container bottom -->
    {(config.content.showWordCount || config.content.showReadTime) && (
      <div class="absolute bottom-4 left-4 right-4 md:left-9 md:right-2 text-sm text-black/30 dark:text-white/30 flex gap-4 transition">
        {config.content.showWordCount && (
          <div>{remarkPluginFrontmatter.words} {" " + i18n(I18nKey.wordsCount)}</div>
        )}
        {config.content.showWordCount && config.content.showReadTime && <div>|</div>}
        {config.content.showReadTime && (
          <div>{remarkPluginFrontmatter.minutes} {" " + i18n(I18nKey.minutesCount)}</div>
        )}
      </div>
    )}
  </div>

  <!-- ENTER BUTTON for cards without cover on desktop -->
  {!hasCover && config.layout.showEnterButton && (
    <a href={url} 
       aria-label={title} 
       class="!hidden md:!flex btn-regular w-[3.25rem] absolute right-3 top-3 bottom-3 rounded-xl bg-[var(--enter-btn-bg)] hover:bg-[var(--enter-btn-bg-hover)] active:bg-[var(--enter-btn-bg-active)] active:scale-95">
      <Icon 
        name="material-symbols:chevron-right-rounded"
        class="transition text-[var(--primary)] text-4xl mx-auto" />
    </a>
  )}
</div>

<!-- MOBILE SEPARATOR (only visible on mobile) -->
<div class="transition border-t-[1px] border-dashed mx-6 border-black/10 dark:border-white/[0.15] last:border-t-0 md:hidden"></div>

<style>
  /* Ensure proper layering for image overlays */
  .blur-background {
    z-index: 1;
  }
  
  .main-image {
    z-index: 5;
  }

  /* Ensure images always use proper object-fit */
  .postcard-image {
    object-fit: cover !important;
    width: 100% !important;
    height: 100% !important;
  }
</style>