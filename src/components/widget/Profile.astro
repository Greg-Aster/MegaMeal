---
import ImageWrapper from '../misc/ImageWrapper.astro'
import { Icon } from 'astro-icon/components'
import { profileConfig } from '../../config'
import { url } from '../../utils/url-utils'
import { Image } from 'astro:assets'; // Import the Image component

// Import avatar images
import avatar from 'src/assets/avatar/avatar.png';
import avatar2 from 'src/assets/avatar/avatar2.png';
import avatar3 from 'src/assets/avatar/avatar3.png';
import avatar4 from 'src/assets/avatar/avatar4.png';
import avatar5 from 'src/assets/avatar/avatar5.png';
import avatar6 from 'src/assets/avatar/avatar6.png';

// Update your avatarList to use the imported images
const avatarList = [
  avatar,
  avatar2,
  avatar3,
  avatar4,
  avatar5,
  avatar6,
];

const config = profileConfig;
---
<div class="card-base p-3">
  <a
    aria-label="Go to About Page"
    href={url('/about/')}
    class="group block relative mx-auto mt-1 lg:mx-0 lg:mt-0 mb-3 max-w-[12rem] lg:max-w-none overflow-hidden rounded-xl active:scale-95"
  >
    <div class="absolute transition pointer-events-none group-hover:bg-black/30 group-active:bg-black/50 w-full h-full z-50 flex items-center justify-center">
      <Icon
        name="fa6-regular:address-card"
        class="transition opacity-0 scale-90 group-hover:scale-100 group-hover:opacity-100 text-white text-5xl"
      ></Icon>
    </div>
    <!-- Image container with relative positioning -->
    <div class="relative w-full aspect-square">
      {avatarList.map((src, index) => (
        <Image
          src={src}
          alt="Profile Image of the Author"
          width={512} 
          height={512}
          fetchpriority={index === 0 ? 'high' : undefined}
          loading={index === 0 ? 'eager' : 'lazy'}
          class={`avatar-image absolute inset-0 w-full h-full object-contain transition-opacity duration-1000 ${
            index === 0 ? 'opacity-100' : 'opacity-0'
          }`}
        />
      ))}
    </div>
  </a>
  <div class="px-2">
    <div class="font-bold text-xl text-center mb-1 dark:text-neutral-50 transition">{config.name}</div>
    <div class="h-1 w-5 bg-[var(--primary)] mx-auto rounded-full mb-2 transition"></div>
    <div class="text-center text-neutral-400 mb-2.5 transition">{config.bio}</div>
    <div class="flex gap-2 justify-center mb-1">
      {config.links.length > 1 &&
        config.links.map((item) => (
          <a
            rel="me"
            aria-label={item.name}
            href={item.url}
            target="_blank"
            class="btn-regular rounded-lg h-10 w-10 active:scale-90"
          >
            <Icon name={item.icon} class="text-[1.5rem]"></Icon>
          </a>
        ))}
      {config.links.length == 1 && (
        <a
          rel="me"
          aria-label={config.links[0].name}
          href={config.links[0].url}
          target="_blank"
          class="btn-regular rounded-lg h-10 gap-2 px-3 font-bold active:scale-95"
        >
          <Icon name={config.links[0].icon} class="text-[1.5rem]"></Icon>
          {config.links[0].name}
        </a>
      )}
    </div>
  </div>
</div>

<script>
document.addEventListener('DOMContentLoaded', () => {
  const avatarImages = document.querySelectorAll('.avatar-image');
  let currentIndex = 0;
  let direction = 1; // 1 = downward, -1 = upward

  function animateAvatar() {
    // Reset all images to opacity 0
    avatarImages.forEach((img) => {
      (img as HTMLImageElement).style.opacity = '0';
    });

    // Update currentIndex based on direction
    currentIndex += direction;

    // Reverse direction at boundaries
    if (currentIndex >= avatarImages.length - 1) direction = -1;
    if (currentIndex <= 0) direction = 1;

    // Fade in the current image
    (avatarImages[currentIndex] as HTMLImageElement).style.opacity = '1';
  }

  // Start animation
  setInterval(animateAvatar, 7000); // Adjust timing as needed
});
</script>