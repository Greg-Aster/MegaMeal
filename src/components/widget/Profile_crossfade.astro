---
import ImageWrapper from '../misc/ImageWrapper.astro'
import { Icon } from 'astro-icon/components'
import { profileConfig } from '../../config'
import { url } from '../../utils/url-utils'

const avatarList = [
    '/assets/avatar/avatar.png',
    '/assets/avatar/avatar2.png'
];

const config = profileConfig
---

<div class="card-base p-3">
    <a aria-label="Go to About Page" href={url('/about/')}
       class="group block relative mx-auto mt-1 lg:mx-0 lg:mt-0 mb-3
       max-w-[12rem] lg:max-w-none overflow-hidden rounded-xl active:scale-95">
        <div class="absolute transition pointer-events-none group-hover:bg-black/30 group-active:bg-black/50
        w-full h-full z-50 flex items-center justify-center">
            <Icon name="fa6-regular:address-card"
                  class="transition opacity-0 scale-90 group-hover:scale-100 group-hover:opacity-100 text-white text-5xl">
            </Icon>
        </div>
        <!-- Use ImageWrapper for the avatar image -->
        <ImageWrapper 
        id="avatar-img-1" 
        src="/assets/avatar/avatar.png"
        alt="Profile Image of the Author" 
        class="absolute inset-0 w-full h-full object-contain opacity-100 transition-opacity duration-1000"
        
        id="avatar-img-2"
        src="/assets/avatar/avatar2.png"
        alt="Profile Image of the Author"
        class="absolute inset-0 w-full h-full object-contain opacity-0 transition-opacity duration-1000"
      />
    </ImageWrapper>
    </a>
    <div class="px-2">
        <div class="font-bold text-xl text-center mb-1 dark:text-neutral-50 transition">{config.name}</div>
        <div class="h-1 w-5 bg-[var(--primary)] mx-auto rounded-full mb-2 transition"></div>
        <div class="text-center text-neutral-400 mb-2.5 transition">{config.bio}</div>
        <div class="flex gap-2 justify-center mb-1">
            {config.links.length > 1 && config.links.map(item =>
                    <a rel="me" aria-label={item.name} href={item.url} target="_blank" class="btn-regular rounded-lg h-10 w-10 active:scale-90">
                        <Icon name={item.icon} class="text-[1.5rem]"></Icon>
                    </a>
            )}
            {config.links.length == 1 && <a rel="me" aria-label={config.links[0].name} href={config.links[0].url} target="_blank"
                                            class="btn-regular rounded-lg h-10 gap-2 px-3 font-bold active:scale-95">
                <Icon name={config.links[0].icon} class="text-[1.5rem]"></Icon>
                {config.links[0].name}
            </a>}
        </div>
    </div>
</div>


<img
  id="avatar-img-1"
  src="/assets/avatar/avatar.png"
  alt="Profile Image of the Author"
  class="absolute inset-0 w-full h-full object-contain opacity-100 transition-opacity duration-1000"
/>
<img
  id="avatar-img-2"
  src="/assets/avatar/avatar2.png"
  alt="Profile Image of the Author"
  class="absolute inset-0 w-full h-full object-contain opacity-0 transition-opacity duration-1000"
/>

<script>
document.addEventListener('DOMContentLoaded', () => {
  const avatarList = [
    '/assets/avatar/avatar.png',
    '/assets/avatar/avatar2.png',
    '/assets/avatar/avatar3.png',
    '/assets/avatar/avatar4.png',
    '/assets/avatar/avatar5.png',
    '/assets/avatar/avatar6.png',
  ];

  let avatarIndex = 0;
  let currentImage = 1; // Tracks which image is currently visible

  // Cast to HTMLImageElement
  const avatarElement1 = document.getElementById('avatar-img-1') as HTMLImageElement;
  const avatarElement2 = document.getElementById('avatar-img-2') as HTMLImageElement;

  function updateAvatar() {
    if (avatarElement1 && avatarElement2) {
      // Determine the next image
      avatarIndex = (avatarIndex + 1) % avatarList.length;
      const nextImageSrc = avatarList[avatarIndex];
      console.log(`Switching to image: ${nextImageSrc}`);

      // Swap visibility
      if (currentImage === 1) {
        console.log('Fading out image 1, fading in image 2');
        avatarElement1.style.opacity = '0';
        avatarElement2.src = nextImageSrc; // Update the image source
        avatarElement2.style.opacity = '1';
        currentImage = 2;
      } else {
        console.log('Fading out image 2, fading in image 1');
        avatarElement2.style.opacity = '0';
        avatarElement1.src = nextImageSrc; // Update the image source
        avatarElement1.style.opacity = '1';
        currentImage = 1;
      }
    } else {
      console.error('One or both image elements are missing!');
    }
  }

  // Rotate avatar every x number of seconds
  setInterval(updateAvatar, 2000);
});
</script>

