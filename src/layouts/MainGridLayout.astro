---
import Footer from '@components/Footer.astro'
import Navbar from '@components/Navbar.astro'
import BackToTop from '@components/control/BackToTop.astro'
import SideBar from '@components/widget/SideBar.astro'
import Layout from './Layout.astro'
import { Icon } from 'astro-icon/components'
import { siteConfig } from '../config'
import type { MarkdownHeading } from 'astro'
import TOC from "../components/widget/TOC.astro";
import ImageWrapper from "../components/misc/ImageWrapper.astro";
import {BANNER_HEIGHT, BANNER_HEIGHT_EXTEND, MAIN_PANEL_OVERLAPS_BANNER_HEIGHT} from "../constants/constants";

interface Props {
  title?: string
  banner?: string
  description?: string
  lang?: string
  setOGTypeArticle?: boolean;
  headings? : MarkdownHeading[]
}

const { title, banner, description, lang, setOGTypeArticle, headings = [] } = Astro.props
const hasBannerCredit = siteConfig.banner.enable && siteConfig.banner.credit.enable
const hasBannerLink = !!siteConfig.banner.credit.url

// Mobile-friendly adjustments - smaller banner height for mobile
const bannerHeightMobile = "30vh";
const bannerHeightDesktop = `${BANNER_HEIGHT}vh`;
const bannerExtendMobile = "10vh";
const bannerExtendDesktop = `${BANNER_HEIGHT_EXTEND}vh`;

// Responsive positioning for main panel
const mainPanelTop = siteConfig.banner.enable ? 
  `${bannerHeightMobile}; @media (min-width: 768px) { ${bannerHeightDesktop}; }` : 
  "5.5rem";
---

<Layout title={title} banner={banner} description={description} lang={lang} setOGTypeArticle={setOGTypeArticle}>

<!-- Navbar -->
<slot slot="head" name="head"></slot>
<div id="top-row" class="z-50 pointer-events-none relative transition-all duration-700 max-w-[var(--page-width)] px-0 md:px-4 mx-auto">
    <div id="navbar-wrapper" class="pointer-events-auto sticky top-0 transition-all">
        <Navbar></Navbar>
    </div>
</div>

<!-- Banner - Responsive version -->
{siteConfig.banner.enable && 
  <div id="banner-wrapper" 
       class="absolute z-10 w-full transition duration-700 overflow-hidden h-[40vh] md:h-[30vh]" 
       style={`top: -25vh; @media (min-width: 768px) { top: -${BANNER_HEIGHT_EXTEND}vh; }`}>
    <ImageWrapper 
      id="banner" 
      alt="Banner image of the blog" 
      class="object-cover h-full w-full transition duration-700 opacity-100 scale-100 md:scale-105"
      src={siteConfig.banner.src} 
      position={siteConfig.banner.position}
    >
    </ImageWrapper>
  </div>
}

<!-- Main content - with responsive positioning -->
<div class="absolute w-full z-30 pointer-events-none" style={`top: ${mainPanelTop}`}>
    <div class="relative max-w-[var(--page-width)] mx-auto pointer-events-auto">
        <div id="main-grid" class="transition duration-700 w-full left-0 right-0 grid grid-cols-1 lg:grid-cols-[17.5rem_auto] grid-rows-[auto_1fr_auto] lg:grid-rows-[auto]
    mx-auto gap-4 px-2 md:px-4"
        >
            <!-- Banner image credit - repositioned for mobile -->
            {hasBannerCredit && 
              <a href={siteConfig.banner.credit.url} 
                 id="banner-credit" 
                 target="_blank" 
                 rel="noopener" 
                 aria-label="Visit image source"
                 class:list={[
                   "group onload-animation transition-all absolute flex justify-center items-center rounded-full " +
                   "px-3 right-4 -top-[3.25rem] bg-black/60 hover:bg-black/70 h-9", 
                   {"hover:pr-9 active:bg-black/80": hasBannerLink}
                 ]}
              >
                <Icon class="text-white/75 text-[1.25rem] mr-1" name="material-symbols:copyright-outline-rounded"></Icon>
                <div class="text-white/75 text-xs">{siteConfig.banner.credit.text}</div>
                <Icon 
                  class:list={[
                    "transition absolute text-[oklch(0.75_0.14_var(--hue))] right-4 text-[0.75rem] opacity-0",
                    {"group-hover:opacity-100": hasBannerLink}
                  ]}
                  name="fa6-solid:arrow-up-right-from-square">
                </Icon>
              </a>
            }

            <SideBar 
              class="mb-4 row-start-2 row-end-3 col-span-1 lg:row-start-1 lg:row-end-2 lg:col-span-1 lg:max-w-[17.5rem] onload-animation" 
              headings={headings}>
            </SideBar>

            <main id="swup-container" class="transition-swup-fade col-span-1 lg:col-span-1 overflow-hidden">
                <div id="content-wrapper" class="onload-animation">
                    <slot></slot>
                    <div class="footer col-span-1 onload-animation hidden lg:block">
                        <Footer></Footer>
                    </div>
                </div>
            </main>

            <div class="footer col-span-1 onload-animation block lg:hidden">
                <Footer></Footer>
            </div>
        </div>

        <BackToTop></BackToTop>
    </div>
</div>

<!-- TOC and other elements -->
<div class="absolute w-full z-0 hidden 2xl:block">
    <div class="relative max-w-[var(--page-width)] mx-auto">
        {siteConfig.toc.enable && 
          <div 
            id="toc-wrapper" 
            class:list={[
              "hidden lg:block transition absolute top-0 -right-[var(--toc-width)] w-[var(--toc-width)] flex items-center",
              {"toc-hide": siteConfig.banner.enable}
            ]}
          >
            <div id="toc-inner-wrapper" class="fixed top-14 w-[var(--toc-width)] h-[calc(100vh_-_20rem)] overflow-y-scroll overflow-x-hidden hide-scrollbar">
                <div id="toc" class="w-full h-full transition-swup-fade ">
                    <div class="h-8 w-full"></div>
                    <TOC headings={headings}></TOC>
                    <div class="h-8 w-full"></div>
                </div>
            </div>
          </div>
        }

        {!siteConfig.toc.enable && <div id="toc"></div>}
    </div>
</div>
</Layout>

<!-- Animated banner - improved for responsiveness -->
{siteConfig.banner.enable && 
  <div 
    id="banner-wrapper-animated" 
    class="absolute z-10 w-full transition duration-5000 overflow-hidden h-[50vh] md:h-[60vh] top-[-15vh] md:top-[-22vh] lg:top-[-00vh]"
    >
    <div class="relative w-full h-full">
        <img
        id="banner-img-1"
        src="/assets/banner/0001.png"
        alt="Banner image of the blog"
        class="absolute inset-0 w-full h-full object-cover object-center transition-opacity duration-1000 opacity-100 scale-100 md:scale-105"
        />
        <img
        id="banner-img-2"
        src="/assets/banner/0007.png"
        alt="Banner image of the blog"
        class="absolute inset-0 w-full h-full object-cover object-center transition-opacity duration-1000 opacity-0 scale-100 md:scale-105"
        />
    </div>
   </div>
}

<script>
const bannerList = [
    '/assets/banner/0001.png',
    '/assets/banner/0007.png',
    '/assets/banner/0014.png',
    '/assets/banner/0021.png',
    '/assets/banner/0028.png',
    '/assets/banner/0035.png',
    '/assets/banner/0042.png',
    '/assets/banner/0049.png', 
    '/assets/banner/0042.png', 
    '/assets/banner/0035.png',
    '/assets/banner/0028.png',
    '/assets/banner/0021.png',
    '/assets/banner/0014.png',
    '/assets/banner/0007.png',
    '/assets/banner/0001.png'
];

let bannerIndex = 0;
let currentBanner = 1;

document.addEventListener('DOMContentLoaded', () => {
    const bannerElement1 = document.getElementById('banner-img-1') as HTMLImageElement;
    const bannerElement2 = document.getElementById('banner-img-2') as HTMLImageElement;
    const bannerWrapper = document.getElementById('banner-wrapper-animated');

    // Function to adjust banner based on screen size
    function adjustBannerForScreenSize() {
        if (!bannerWrapper) return;
        
        const isMobile = window.innerWidth < 768;
        if (isMobile) {
            // Mobile adjustments
            bannerWrapper.classList.remove('md:h-[50vh]');
            bannerWrapper.classList.add('h-[40vh]');
        } else {
            // Desktop adjustments
            bannerWrapper.classList.remove('h-[40vh]');
            bannerWrapper.classList.add('md:h-[50vh]');
        }
    }

    // Initialize banner images
    if (bannerElement1 && bannerElement2) {
        bannerElement1.src = bannerList[0];
        bannerElement2.src = bannerList[1];
    }

    // Initial adjustment for screen size
    adjustBannerForScreenSize();

    // Update banner source and visibility
    function updateBanner() {
        if (bannerElement1 && bannerElement2) {
            // Get next image index
            bannerIndex = (bannerIndex + 1) % bannerList.length;
            const nextImageSrc = bannerList[bannerIndex];

            // Swap visibility
            if (currentBanner === 1) {
                bannerElement1.style.opacity = '0';
                bannerElement2.src = nextImageSrc;
                bannerElement2.style.opacity = '1';
                currentBanner = 2;
            } else {
                bannerElement2.style.opacity = '0';
                bannerElement1.src = nextImageSrc;
                bannerElement1.style.opacity = '1';
                currentBanner = 1;
            }
        }
    }

    // Adjust on window resize
    window.addEventListener('resize', adjustBannerForScreenSize);

    // Rotate banner every x seconds
    setInterval(updateBanner, 7000);
});
</script>