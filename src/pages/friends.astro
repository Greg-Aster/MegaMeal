---
import MainGridLayout from '../layouts/MainGridLayout.astro';
import { Icon } from 'astro-icon/components';
---

<MainGridLayout title="Content Sharing" description="Share and manage blog content with friends">
  <!-- Check authentication on page load -->
  <div id="auth-check" class="card-base w-full rounded-[var(--radius-large)] overflow-hidden relative mb-4 p-6 hidden">
    <div class="text-center">
      <h2 class="text-2xl font-bold text-90 mb-4 text-[var(--primary)]">Admin Authentication Required</h2>
      <p class="text-neutral-600 dark:text-neutral-300 mb-6">
        Please sign in to access the content sharing hub.
      </p>
      <div class="max-w-md mx-auto">
        <div class="mb-4">
          <label for="auth-username" class="block text-sm font-medium text-75 mb-1">Username</label>
          <input 
            type="text" 
            id="auth-username" 
            class="w-full px-3 py-2 bg-white dark:bg-neutral-700 border border-neutral-300 dark:border-neutral-600 rounded-md text-sm transition" 
          />
        </div>
        <div class="mb-4">
          <label for="auth-password" class="block text-sm font-medium text-75 mb-1">Password</label>
          <input 
            type="password" 
            id="auth-password" 
            class="w-full px-3 py-2 bg-white dark:bg-neutral-700 border border-neutral-300 dark:border-neutral-600 rounded-md text-sm transition" 
          />
        </div>
        <button 
          id="auth-submit" 
          class="w-full py-2 px-4 bg-[var(--primary)] hover:opacity-90 text-white font-medium rounded-md transition-opacity"
        >
          Sign In
        </button>
      </div>
    </div>
  </div>

  <!-- Main content (hidden until authenticated) -->
  <div id="admin-content" class="admin-content hidden">
    <!-- Header Section -->
    <div class="card-base w-full rounded-[var(--radius-large)] overflow-hidden relative mb-4">
      <div class="pl-6 md:pl-9 pr-6 md:pr-9 pt-6 md:pt-7 pb-6">
        <h1 class="text-3xl font-bold text-90 mb-4 text-[var(--primary)]">Content Sharing Hub</h1>
        <p class="text-neutral-600 dark:text-neutral-300 mb-4">
          Manage your content, create packages to share with other blogs, and import content from friends.
        </p>
      </div>
    </div>

    <!-- Content Sharing Grid -->
    <div class="card-base w-full rounded-[var(--radius-large)] overflow-hidden relative mb-4">
      <div class="p-6 md:p-9">
        <div class="grid grid-cols-1 md:grid-cols-2 gap-8">
          <!-- Publish Section -->
          <div>
            <h2 class="text-xl font-semibold text-black/80 dark:text-white/80 mb-4">Share Your Content</h2>
            <p class="text-neutral-600 dark:text-neutral-300 mb-6">
              Export your content as a package that others can import to their blogs. Choose what to include in your share package.
            </p>
            
            <div class="space-y-4 bg-neutral-50 dark:bg-neutral-800/50 p-4 rounded-lg mb-6">
              <div class="flex items-start">
                <input type="checkbox" id="share-posts" class="mt-1 mr-3" checked />
                <div>
                  <label for="share-posts" class="block text-sm font-medium text-neutral-700 dark:text-neutral-300">Blog Posts</label>
                  <p class="text-xs text-neutral-500 dark:text-neutral-400">Include your blog content</p>
                </div>
              </div>
              
              <div class="flex items-start">
                <input type="checkbox" id="share-timeline" class="mt-1 mr-3" checked />
                <div>
                  <label for="share-timeline" class="block text-sm font-medium text-neutral-700 dark:text-neutral-300">Timeline Events</label>
                  <p class="text-xs text-neutral-500 dark:text-neutral-400">Include timeline data</p>
                </div>
              </div>
              
              <div class="flex items-start">
                <input type="checkbox" id="share-config" class="mt-1 mr-3" />
                <div>
                  <label for="share-config" class="block text-sm font-medium text-neutral-700 dark:text-neutral-300">Site Configuration</label>
                  <p class="text-xs text-neutral-500 dark:text-neutral-400">Include your site settings</p>
                </div>
              </div>
              
              <div class="flex items-start">
                <input type="checkbox" id="share-assets" class="mt-1 mr-3" checked />
                <div>
                  <label for="share-assets" class="block text-sm font-medium text-neutral-700 dark:text-neutral-300">Media Assets</label>
                  <p class="text-xs text-neutral-500 dark:text-neutral-400">Include images and other media files</p>
                </div>
              </div>
            </div>
            
            <div class="space-y-4">
              <button id="create-package-button" class="w-full px-4 py-3 bg-[var(--primary)] text-white font-medium rounded-md hover:opacity-90 transition-opacity flex items-center justify-center">
                <Icon name="mdi:package-variant" class="w-5 h-5 mr-2" />
                Create & Download Package
              </button>
            </div>
          </div>
          
          <!-- Import Section -->
          <div>
            <h2 class="text-xl font-semibold text-black/80 dark:text-white/80 mb-4">Import Content</h2>
            <p class="text-neutral-600 dark:text-neutral-300 mb-6">
              Add content from other blogs to your site by uploading a package file.
            </p>
            
            <div class="space-y-6">
              <!-- Import by File -->
              <div>
                <h3 class="text-md font-medium text-black/70 dark:text-white/70 mb-3">Upload Package File</h3>
                <div class="border-2 border-dashed border-neutral-300 dark:border-neutral-700 rounded-lg p-4 text-center">
                  <label for="package-file" class="block cursor-pointer">
                    <Icon name="mdi:cloud-upload-outline" class="w-10 h-10 mx-auto text-neutral-400 dark:text-neutral-600 mb-2" />
                    <span class="text-sm text-neutral-600 dark:text-neutral-400">Click to select a package file or drag and drop</span>
                    <input id="package-file" type="file" accept=".zip,.json" class="hidden" />
                  </label>
                  <p id="file-name" class="mt-2 text-sm text-neutral-500 dark:text-neutral-500 hidden"></p>
                </div>
              </div>
              
              <!-- Import Options -->
              <div id="import-options" class="space-y-4 bg-neutral-50 dark:bg-neutral-800/50 p-4 rounded-lg mb-6 hidden">
                <h3 class="text-md font-medium text-black/70 dark:text-white/70 mb-2">Import Options</h3>
                
                <div class="flex items-start">
                  <input type="checkbox" id="import-posts" class="mt-1 mr-3" checked />
                  <div>
                    <label for="import-posts" class="block text-sm font-medium text-neutral-700 dark:text-neutral-300">Blog Posts</label>
                    <p class="text-xs text-neutral-500 dark:text-neutral-400">Import blog content</p>
                  </div>
                </div>
                
                <div class="flex items-start">
                  <input type="checkbox" id="import-timeline" class="mt-1 mr-3" checked />
                  <div>
                    <label for="import-timeline" class="block text-sm font-medium text-neutral-700 dark:text-neutral-300">Timeline Events</label>
                    <p class="text-xs text-neutral-500 dark:text-neutral-400">Import timeline data</p>
                  </div>
                </div>
                
                <div class="flex items-start">
                  <input type="checkbox" id="import-config" class="mt-1 mr-3" />
                  <div>
                    <label for="import-config" class="block text-sm font-medium text-neutral-700 dark:text-neutral-300">Site Configuration</label>
                    <p class="text-xs text-neutral-500 dark:text-neutral-400">Replace your site settings (use with caution)</p>
                  </div>
                </div>
                
                <div class="flex items-start">
                  <input type="checkbox" id="import-assets" class="mt-1 mr-3" checked />
                  <div>
                    <label for="import-assets" class="block text-sm font-medium text-neutral-700 dark:text-neutral-300">Media Assets</label>
                    <p class="text-xs text-neutral-500 dark:text-neutral-400">Import images and other media files</p>
                  </div>
                </div>
                
                <div class="pt-2">
                  <button id="import-package-button" class="w-full px-4 py-3 bg-[var(--primary)] text-white font-medium rounded-md hover:opacity-90 transition-opacity flex items-center justify-center">
                    <Icon name="mdi:import" class="w-5 h-5 mr-2" />
                    Import Content
                  </button>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
      
    <!-- Connections Section -->
    <div class="card-base w-full rounded-[var(--radius-large)] overflow-hidden relative mb-4">
      <div class="p-6 md:p-9">
        <h2 class="text-xl font-semibold text-black/80 dark:text-white/80 mb-4">Connected Friends</h2>
        <p class="text-neutral-600 dark:text-neutral-300 mb-6">
          Blogs you're connected with for automatic content sharing and updates.
        </p>
        
        <div class="grid grid-cols-1 md:grid-cols-2 gap-4 mb-6">
          <!-- Friend Card Template (Empty State) -->
          <div id="no-friends" class="col-span-1 md:col-span-2 p-8 text-center bg-neutral-50 dark:bg-neutral-800/20 rounded-lg">
            <Icon name="mdi:account-group-outline" class="w-12 h-12 mx-auto text-neutral-400 dark:text-neutral-600 mb-3" />
            <h3 class="text-lg font-medium text-neutral-700 dark:text-neutral-300 mb-2">No Connections Yet</h3>
            <p class="text-sm text-neutral-500 dark:text-neutral-400 mb-4">Import content from other blogs to automatically add them as connections.</p>
          </div>
          
          <!-- Friend Card (Will be populated by JavaScript) -->
          <div id="friend-template" class="friend-card hidden flex items-start p-4 border border-neutral-200 dark:border-neutral-700 rounded-lg hover:border-[var(--primary)] transition-colors">
            <div class="w-12 h-12 bg-neutral-200 dark:bg-neutral-700 rounded-full overflow-hidden mr-4 flex-shrink-0">
              <img src="" alt="Profile" class="w-full h-full object-cover" />
            </div>
            <div class="flex-1">
              <h3 class="text-lg font-medium text-black/80 dark:text-white/80 mb-1 friend-name">Friend Name</h3>
              <p class="text-sm text-neutral-500 dark:text-neutral-400 mb-2 friend-bio">Friend bio description goes here</p>
              <div class="flex items-center text-xs text-neutral-500 dark:text-neutral-400">
                <span class="flex items-center mr-3">
                  <Icon name="mdi:note-outline" class="w-4 h-4 mr-1" />
                  <span class="friend-posts">12 Posts</span>
                </span>
                <span class="flex items-center">
                  <Icon name="mdi:clock-outline" class="w-4 h-4 mr-1" />
                  <span class="friend-updated">Last updated 2 days ago</span>
                </span>
              </div>
            </div>
            <div class="flex-shrink-0 ml-2">
              <button class="friend-sync p-2 text-[var(--primary)] hover:bg-[var(--primary)] hover:bg-opacity-10 rounded-full">
                <Icon name="mdi:sync" class="w-5 h-5" />
              </button>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</MainGridLayout>

<script>
  // Constants - credentials
  const ADMIN_USERNAME = 'dndiy';
  const ADMIN_PASSWORD = 'dndiy';

  document.addEventListener('DOMContentLoaded', () => {
    const authCheck = document.getElementById('auth-check');
    const adminContent = document.getElementById('admin-content');
    
    // Check if already authenticated
    const isAuthenticated = localStorage.getItem('isAuthenticated') === 'true';
    
    if (isAuthenticated) {
      // Already authenticated - show content
      adminContent.classList.remove('hidden');
      initializeAdminPage();
    } else {
      // Not authenticated - show login
      authCheck.classList.remove('hidden');
      
      // Set up auth form
      const authForm = document.getElementById('auth-submit');
      authForm.addEventListener('click', () => {
        const username = document.getElementById('auth-username').value;
        const password = document.getElementById('auth-password').value;
        
        if (username === ADMIN_USERNAME && password === ADMIN_PASSWORD) {
          // Set authenticated and show admin content
          localStorage.setItem('isAuthenticated', 'true');
          authCheck.classList.add('hidden');
          adminContent.classList.remove('hidden');
          initializeAdminPage();
        } else {
          alert('Invalid credentials. Please try again.');
        }
      });
    }
    
    function initializeAdminPage() {
      // Create Package Button
      document.getElementById('create-package-button')?.addEventListener('click', () => {
        const includePosts = document.getElementById('share-posts').checked;
        const includeTimeline = document.getElementById('share-timeline').checked;
        const includeConfig = document.getElementById('share-config').checked;
        const includeAssets = document.getElementById('share-assets').checked;
        
        // Create a sample package content
        const packageContent = {
          metadata: {
            created: new Date().toISOString(),
            version: "1.0.0",
            generator: "Static Site Admin",
          },
          options: {
            includePosts,
            includeTimeline,
            includeConfig,
            includeAssets
          },
          content: {
            posts: includePosts ? [
              { id: "1", title: "Sample Post 1", content: "This is a sample post content" },
              { id: "2", title: "Sample Post 2", content: "This is another sample post" }
            ] : [],
            timeline: includeTimeline ? [
              { date: "2023-01-01", title: "Sample Event 1", description: "Event description" },
              { date: "2023-02-15", title: "Sample Event 2", description: "Another event" }
            ] : [],
            config: includeConfig ? { 
              sample: "This would contain your site configuration" 
            } : null,
            assets: includeAssets ? [
              { name: "image1.jpg", type: "image/jpeg", url: "/images/sample.jpg" }
            ] : []
          }
        };
        
        // Convert to JSON and download
        const packageString = JSON.stringify(packageContent, null, 2);
        downloadTextFile(`content-package-${new Date().toISOString().slice(0,10)}.json`, packageString);
        
        // Add a mock friend for demo purposes
        setTimeout(() => {
          addMockFriend();
        }, 500);
      });
      
      // File Upload Handling
      const fileInput = document.getElementById('package-file');
      fileInput?.addEventListener('change', (event) => {
        const files = event.target.files;
        
        if (files.length > 0) {
          const fileName = files[0].name;
          const fileNameElement = document.getElementById('file-name');
          fileNameElement.textContent = fileName;
          fileNameElement.classList.remove('hidden');
          
          // Show import options
          document.getElementById('import-options')?.classList.remove('hidden');
        }
      });
      
      // Import Package Button
      document.getElementById('import-package-button')?.addEventListener('click', () => {
        const importPosts = document.getElementById('import-posts').checked;
        const importTimeline = document.getElementById('import-timeline').checked;
        const importConfig = document.getElementById('import-config').checked;
        const importAssets = document.getElementById('import-assets').checked;
        
        // For demo purposes only - simulate an import
        console.log('Importing package with options:', { importPosts, importTimeline, importConfig, importAssets });
        
        // Show success alert
        alert('Content successfully imported!');
        
        // Add a mock friend to demonstrate
        addMockFriend();
      });
      
      // Add a mock friend for demo purposes
      function addMockFriend() {
        // Hide empty state
        document.getElementById('no-friends')?.classList.add('hidden');
        
        // Clone the template
        const template = document.getElementById('friend-template');
        const clone = template.cloneNode(true);
        clone.id = 'friend-' + Math.random().toString(36).substring(7);
        clone.classList.remove('hidden');
        
        // Set friend details
        clone.querySelector('.friend-name').textContent = 'Jane Creative';
        clone.querySelector('.friend-bio').textContent = 'Digital artist and sci-fi writer';
        clone.querySelector('.friend-posts').textContent = '18 Posts';
        clone.querySelector('.friend-updated').textContent = 'Last updated today';
        clone.querySelector('img').src = '/api/placeholder/48/48';
        
        // Add sync event with client-side visual feedback
        clone.querySelector('.friend-sync').addEventListener('click', (e) => {
          e.preventDefault();
          const syncButton = e.currentTarget;
          const originalIcon = syncButton.innerHTML;
          
          // Simulate syncing (animate the icon)
          syncButton.innerHTML = '<svg xmlns="http://www.w3.org/2000/svg" class="w-5 h-5 animate-spin" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="10"></circle><path d="M12 6v6l4 2"></path></svg>';
          
          setTimeout(() => {
            syncButton.innerHTML = '<svg xmlns="http://www.w3.org/2000/svg" class="w-5 h-5 text-green-500" viewBox="0 0 20 20" fill="currentColor"><path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd" /></svg>';
            
            setTimeout(() => {
              syncButton.innerHTML = originalIcon;
            }, 2000);
          }, 1500);
        });
        
        // Add to the grid
        template.parentNode.appendChild(clone);
      }
      
      // Helper function to download a text file
      function downloadTextFile(filename, content) {
        const blob = new Blob([content], { type: 'application/json' });
        const url = URL.createObjectURL(blob);
        const a = document.createElement('a');
        a.href = url;
        a.download = filename;
        document.body.appendChild(a);
        a.click();
        document.body.removeChild(a);
        URL.revokeObjectURL(url);
      }
    }
  });
</script>