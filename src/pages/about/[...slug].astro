---
import path from 'node:path'
import { getCollection } from 'astro:content'
import License from '@components/misc/License.astro'
import Markdown from '@components/misc/Markdown.astro'
import I18nKey from '@i18n/i18nKey'
import { i18n } from '@i18n/translation'
import MainGridLayout from '@layouts/MainGridLayout.astro'
import { getDir } from '@utils/url-utils'
import { Icon } from 'astro-icon/components'
import { licenseConfig } from '../../config/config'
import ImageWrapper from '../../components/misc/ImageWrapper.astro'
import { profileConfig, siteConfig, avatarConfig } from '../../config/config' // üé¨ NEW: Import avatarConfig
import { formatDateToYYYYMMDD } from '../../utils/date-utils'

// ‚≠ê FIXED: Import the correct layout toggle component
import LayoutToggle from '../../components/client/LayoutToggle.svelte'

export async function getStaticPaths() {
  const aboutPages = await getCollection('about');
  return aboutPages.map(aboutPage => ({
    params: { slug: aboutPage.slug },
    props: { aboutPage },
  }));
}

const { aboutPage } = Astro.props;
console.log('ABOUT PAGE - Processing about page:', aboutPage.slug);

// ‚≠ê NEW: Extract oneColumn setting from frontmatter
const oneColumnMode = aboutPage.data.oneColumn || false;
console.log('ABOUT PAGE - oneColumn from frontmatter:', oneColumnMode);

// Extract custom author data for the layout
const customAuthorData = {
  avatarImage: aboutPage.data.avatar,
  authorName: aboutPage.data.name,
  authorBio: aboutPage.data.bio,
  authorLink: `/about/${aboutPage.slug}/`, // Self-referential link
};

console.log('ABOUT PAGE - Custom author data:', customAuthorData);

// Extract backgroundImage from frontmatter for dynamic background support
const backgroundImage = aboutPage.data.backgroundImage;

// üé¨ NEW: Video configuration from avatarConfig (same as Profile.svelte)
const videoConfig = avatarConfig?.videoConfig || {};
const playbackRate = videoConfig.playbackRate || 0.5; // Default to 50% speed
const shouldLoop = videoConfig.loop ?? true; // Default to true, can be disabled
const loopDelay = videoConfig.loopDelay || 5000; // Delay between loops in ms
const playOnce = videoConfig.playOnce || false; // Play once then stop

console.log('ABOUT PAGE - Video config:', {
  playbackRate,
  shouldLoop,
  loopDelay,
  playOnce
});

// üé¨ NEW: Video detection helper functions (same as Profile.svelte)
function isVideoFile(src: string): boolean {
  if (!src) return false;
  const lowercaseSrc = src.toLowerCase();
  return lowercaseSrc.includes('.mp4') || 
         lowercaseSrc.includes('.webm') || 
         lowercaseSrc.includes('.mov') ||
         lowercaseSrc.match(/\.(mp4|webm|mov|avi)(\?|$)/);
}

function isAnimatedFile(src: string): boolean {
  if (!src) return false;
  const lowercaseSrc = src.toLowerCase();
  return lowercaseSrc.includes('.gif') || 
         lowercaseSrc.includes('.webp') || 
         lowercaseSrc.includes('.apng') ||
         lowercaseSrc.match(/\.(gif|webp|apng)(\?|$)/);
}

const { Content, headings } = await aboutPage.render()

const jsonLd = {
  '@context': 'https://schema.org',
  '@type': 'AboutPage',
  headline: aboutPage.data.title,
  description: aboutPage.data.description || aboutPage.data.title,
  datePublished: aboutPage.data.published ? formatDateToYYYYMMDD(aboutPage.data.published) : undefined,
  author: {
    '@type': 'Person',
    name: aboutPage.data.name,
  },
  inLanguage: siteConfig.lang.replace('_', '-'),
}
---

<MainGridLayout 
  title={aboutPage.data.title} 
  description={aboutPage.data.description} 
  setOGTypeArticle={false}
  headings={headings}
  post={aboutPage}
  isPostPage={false}
  backgroundImage={backgroundImage}
  customAuthorData={customAuthorData}
  oneColumn={oneColumnMode}
>

<script is:inline slot="head" type="application/ld+json" set:html={JSON.stringify(jsonLd)}></script>

<!-- =============================================================== -->
<!-- ‚≠ê FIXED: BUILT-IN LAYOUT TOGGLE - USING CORRECT COMPONENT     -->
<!-- =============================================================== -->
<LayoutToggle 
  client:load 
  variant="minimal"
  position="top-right"
  size="md"
/>

<div class="flex w-full rounded-[var(--radius-large)] overflow-hidden relative mb-4">
  <div id="about-container" 
       class="card-base z-10 px-6 md:px-9 pt-6 pb-4 relative w-full"
       data-about-slug={aboutPage.slug}
       data-about-name={aboutPage.data.name}
       data-about-role={aboutPage.data.role}>
    
    <!-- Author Header Section -->
    <div class="relative onload-animation mb-6">
      <!-- üé¨ ENHANCED: Author Avatar with Video Support and Configuration -->
      {aboutPage.data.avatar && (
        <div class="flex flex-col md:flex-row items-center md:items-start gap-6 mb-6">
          <div class="flex-shrink-0">
            {isVideoFile(aboutPage.data.avatar) ? (
              <!-- üé¨ ENHANCED: Video avatar support with configuration from avatarConfig -->
              <video
                id="about-avatar-video"
                src={aboutPage.data.avatar}
                alt={`Profile video of ${aboutPage.data.name}`}
                class="w-32 h-32 md:w-40 md:h-40 object-cover rounded-xl shadow-lg"
                autoplay
                muted
                loop={shouldLoop && loopDelay === 0 && !playOnce}
                playsinline
                disablePictureInPicture
                preload="auto"
                data-playback-rate={playbackRate}
                data-should-loop={shouldLoop}
                data-loop-delay={loopDelay}
                data-play-once={playOnce}
              >
                <!-- Fallback for unsupported video -->
                <div class="w-32 h-32 md:w-40 md:h-40 flex items-center justify-center bg-gradient-to-br from-blue-400 to-purple-500 rounded-xl shadow-lg">
                  <svg class="w-16 h-16 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"></path>
                  </svg>
                </div>
              </video>
            ) : (
              <!-- üé¨ ENHANCED: Image avatar (including animated GIFs, WebP, etc.) -->
              <img
                src={aboutPage.data.avatar}
                alt={`Profile image of ${aboutPage.data.name}`}
                class="w-32 h-32 md:w-40 md:h-40 object-cover rounded-xl shadow-lg"
                loading="eager"
              />
            )}
          </div>
          <div class="flex-1 text-center md:text-left">
            <h1 class="text-3xl md:text-4xl font-bold mb-2 text-black/90 dark:text-white/90">
              {aboutPage.data.name}
            </h1>
            {aboutPage.data.role && (
              <div class="text-xl text-[var(--primary)] font-medium mb-3">
                {aboutPage.data.role}
              </div>
            )}
            {aboutPage.data.bio && (
              <div class="text-gray-600 dark:text-neutral-400 text-lg">
                {aboutPage.data.bio}
              </div>
            )}
          </div>
        </div>
      )}
      
      <!-- Simple header if no avatar -->
      {!aboutPage.data.avatar && (
        <>
          <h1 class="text-3xl md:text-4xl font-bold mb-3 text-black/90 dark:text-white/90 text-center md:text-left">
            {aboutPage.data.name}
          </h1>
          {aboutPage.data.role && (
            <div class="text-xl text-[var(--primary)] font-medium mb-4 text-center md:text-left">
              {aboutPage.data.role}
            </div>
          )}
        </>
      )}
      
      <!-- Social Links -->
      {aboutPage.data.socialLinks && aboutPage.data.socialLinks.length > 0 && (
        <div class="flex gap-3 justify-center md:justify-start mb-6">
          {aboutPage.data.socialLinks.map((link) => (
            <a
              href={link.url}
              target="_blank"
              rel="noopener noreferrer"
              aria-label={`${aboutPage.data.name}'s ${link.name}`}
              class="btn-regular rounded-lg h-10 w-10 active:scale-90 flex items-center justify-center text-gray-600 dark:text-neutral-400 hover:text-[var(--primary)] transition"
            >
              <!-- GitHub Icon -->
              {link.icon.includes('github') && (
                <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 24 24">
                  <path d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z"/>
                </svg>
              )}
              <!-- Twitter/X Icon -->
              {link.icon.includes('twitter') && (
                <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 24 24">
                  <path d="M23.953 4.57a10 10 0 01-2.825.775 4.958 4.958 0 002.163-2.723c-.951.555-2.005.959-3.127 1.184a4.92 4.92 0 00-8.384 4.482C7.69 8.095 4.067 6.13 1.64 3.162a4.822 4.822 0 00-.666 2.475c0 1.71.87 3.213 2.188 4.096a4.904 4.904 0 01-2.228-.616v.06a4.923 4.923 0 003.946 4.827 4.996 4.996 0 01-2.212.085 4.936 4.936 0 004.604 3.417 9.867 9.867 0 01-6.102 2.105c-.39 0-.779-.023-1.17-.067a13.995 13.995 0 007.557 2.209c9.053 0 13.998-7.496 13.998-13.985 0-.21 0-.42-.015-.63A9.935 9.935 0 0024 4.59z"/>
                </svg>
              )}
              <!-- Email Icon -->
              {link.icon.includes('email') && (
                <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 8l7.89 4.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z"/>
                </svg>
              )}
              <!-- Generic Link Icon -->
              {!link.icon.includes('github') && !link.icon.includes('twitter') && !link.icon.includes('email') && (
                <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13.828 10.172a4 4 0 00-5.656 0l-4 4a4 4 0 105.656 5.656l1.102-1.101m-.758-4.899a4 4 0 005.656 0l4-4a4 4 0 00-5.656-5.656l-1.1 1.1"/>
                </svg>
              )}
            </a>
          ))}
        </div>
      )}
    </div>

    <!-- Divider -->
    <div class="border-[var(--line-divider)] border-dashed border-b-[1px] mb-6"></div>

    <!-- Main Content -->
    <Markdown class="mb-6 markdown-content onload-animation prose dark:prose-invert max-w-none">
      <Content />
    </Markdown>

    <!-- Optional metadata footer -->
    {(aboutPage.data.published || aboutPage.data.updated) && (
      <div class="text-sm text-gray-500 dark:text-neutral-500 mt-8 pt-4 border-t border-[var(--line-divider)]">
        {aboutPage.data.published && (
          <div>Created: {aboutPage.data.published.toLocaleDateString()}</div>
        )}
        {aboutPage.data.updated && (
          <div>Last updated: {aboutPage.data.updated.toLocaleDateString()}</div>
        )}
      </div>
    )}
  </div>
</div>

<!-- Navigation back to main about page -->
<div class="flex justify-center mb-4">
  <a href="/about/" class="btn-card rounded-xl px-6 py-3 font-medium active:scale-95 inline-flex items-center gap-2">
    <Icon name="material-symbols:arrow-back-rounded" class="text-lg" />
    Back to About
  </a>
</div>

</MainGridLayout>

<!-- üé¨ NEW: Client-side script to configure video elements with avatarConfig settings -->
<script>
  // üé¨ NEW: Configure video elements with settings from avatarConfig
  function configureVideoElements() {
    const videoElements = document.querySelectorAll('video[data-playback-rate]');
    
    videoElements.forEach((video) => {
      const playbackRate = parseFloat(video.getAttribute('data-playback-rate')) || 0.5;
      const shouldLoop = video.getAttribute('data-should-loop') === 'true';
      const loopDelay = parseInt(video.getAttribute('data-loop-delay')) || 5000;
      const playOnce = video.getAttribute('data-play-once') === 'true';
      
      console.log('üé¨ Configuring about page video:', {
        playbackRate,
        shouldLoop,
        loopDelay,
        playOnce,
        videoSrc: video.src
      });
      
      // Set playback rate
      video.playbackRate = playbackRate;
      
      // Remove any existing event listeners to prevent duplicates
      if (video.endedHandler) {
        video.removeEventListener('ended', video.endedHandler);
      }
      
      // Handle loop behavior
      if (playOnce) {
        video.loop = false;
        video.endedHandler = () => {
          video.pause();
        };
        video.addEventListener('ended', video.endedHandler);
      } else if (loopDelay > 0) {
        video.loop = false;
        video.endedHandler = () => {
          setTimeout(() => {
            if (video && video.paused) {
              video.currentTime = 0;
              video.play().catch(e => console.log('Video play failed:', e));
            }
          }, loopDelay);
        };
        video.addEventListener('ended', video.endedHandler);
      } else {
        video.loop = shouldLoop;
        video.endedHandler = null;
      }
    });
  }

  // Configure videos when DOM is ready
  document.addEventListener('DOMContentLoaded', configureVideoElements);
  
  // Re-configure on Astro page transitions
  document.addEventListener('astro:page-load', configureVideoElements);
</script>

<style>
  /* Add scroll margin for hash navigation */
  #about-container {
    scroll-margin-top: calc(var(--navbar-height) + 2rem);
  }
  
  /* Ensure smooth scrolling */
  html {
    scroll-behavior: smooth;
  }

  /* üé¨ NEW: Ensure videos fit properly */
  video {
    object-fit: cover;
  }
</style>